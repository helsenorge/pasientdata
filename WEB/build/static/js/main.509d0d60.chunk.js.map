{"version":3,"sources":["Images/greenUpTriangle.svg","Images/dashGreenDownArrow.svg","Images/medErrorImage.jpg","Images/ehelse.svg","Images/greenDownTriangle.svg","Images/dashBlueUpArrow.svg","Images/dashOrangeDownArrow.svg","Images/dashGreenUpArrow.svg","Images/goalArrow.svg","Images/yellowDownTriangle.svg","Images/squigglyPatternIcon.svg","Images/pinkUpTriangle.svg","Images/pinkDownTriangle.svg","API/googleFit.js","Redux/actionType.js","Redux/actions.js","Pages/LoginPage/loginPage.js","Utils/getStringsFromLOINC.js","FHIRCommunication.js","fhirUrl.js","Components/Card/cardComponent.js","dataTypes.js","Utils/periodFromView.js","Utils/getStartEndTimes.js","Utils/findStartAndEndIndex.js","Utils/aggregateData.js","Utils/fakeGlucose.js","Utils/getFormat.js","Utils/filterActivityByDate.js","Utils/aggregatedDataForDataType.js","Utils/sortActivity.js","Utils/fakeCarbData.js","Utils/fakeInsulinData.js","Utils/averageData.js","Pages/Dashboard/DashboardContent/dashboardGraph.js","Pages/Dashboard/DashboardContent/bloodSugarContent.js","Pages/Dashboard/DashboardContent/addDataContent.js","Pages/Dashboard/DashboardContent/changeGoalsContent.js","Pages/Dashboard/DashboardContent/compareDataContent.js","Components/InsightButton/insightButton.js","Pages/Dashboard/DashboardContent/dashboardGraphCard.js","Utils/getStaticTrend.js","Pages/Dashboard/dashboard.js","Components/NavigationBar/navigationBar.js","Utils/trends.js","Pages/Insight/InsightCards/trendGoalsCard.js","Components/PeriodStepper/periodStepper.js","Pages/Insight/InsightCards/insightGraph.js","Pages/Insight/InsightCards/graphCard.js","Pages/Insight/InsightCards/patternCard.js","Components/DateDropdown/dateDropdown.js","Pages/Insight/InsightCards/viewCard.js","Pages/Insight/InsightCards/compareDataCard.js","Pages/Insight/InsightCards/goalCard.js","Components/DateSelector/dateSelector.js","Components/DateSelectorCard/dateSelectorCard.js","Utils/PatternCalculations/bloodSugarPatterns.js","Pages/Insight/BloodSugarInsight/bloodSugarInsight.js","Utils/PatternCalculations/stepsPatterns.js","Pages/Insight/StepInsight/stepInsight.js","Pages/Insight/InsulinInsight/insulinInsight.js","Pages/Insight/WeightInsight/weightInsight.js","Pages/Insight/CarbohydrateInsight/carbohydrateInsight.js","Pages/Insight/PhysicalActivityInsight/physicalActivityInsight.js","Utils/addGoal.js","Pages/MyGoalsPage/GoalPopupContents/bloodSugarPopupContent.js","Pages/MyGoalsPage/GoalPopupContents/bloodSugarMeanPopupContent.js","Pages/MyGoalsPage/GoalPopupContents/carbsPopupContent.js","Pages/MyGoalsPage/GoalPopupContents/physicalActivityPopupContent.js","Pages/MyGoalsPage/GoalPopupContents/stepsPopupContent.js","Pages/MyGoalsPage/GoalPopupContents/weightPopupContent.js","Components/ChangeGoalButton/changeGoalButton.js","Pages/MyGoalsPage/GoalContent/goalContent.js","Pages/MyGoalsPage/myGoalsPage.js","Pages/CompareDataPage/CompareDataCards/compareDataGraph.js","Pages/CompareDataPage/CompareDataCards/multipleGraphCard.js","Pages/CompareDataPage/CompareDataCards/dataTypeCard.js","Pages/CompareDataPage/CompareDataCards/goToInsightCard.js","Pages/CompareDataPage/compareDataPage.js","Pages/NotFoundPage/NotFoundPage.js","Components/MenuBar/menuBar.js","StartFromTop.js","App.js","Redux/patientReducer.js","defaultGoals.js","Redux/baseInfoReducer.js","Redux/persistData.js","Redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","urlBase","dataSetInterval","moment","subtract","format","getUserSteps","response","axios","get","headers","Authorization","accessToken","getUserWeight","getUserActivities","formatNanosec","ns","Math","floor","structureDatasets","dataType","currentValue","startTime","endTime","intervalSeconds","secondValue","currentNano","currentIntervalLength","intervalValueSum","startNanos","endNanos","measurements","data","point","forEach","item","index","value","intVal","fpVal","parseInt","startTimeNanos","endTimeNanos","push","start","end","min","responseGoogle","_this","this","console","log","sessionStorage","setItem","JSON","stringify","all","then","spread","steps","weight","activities","datasets","stepMeasurement","weightMeasurement","activitiesMeasurement","name","props","addInfo","profileObj","googleId","givenName","familyName","email","onLoggedIn","catch","error","SET_PATIENT","IS_LOGGED_IN","SET_GOALS","SET_VIEW","SET_NR_OF_INTERVALS_BACK","SET_BLOOD_SUGAR_CHECKED","SET_INSULIN_CHECKED","SET_STEPS_CHECKED","SET_WEIGHT_CHECKED","SET_PHYSICAL_ACTIVITY_CHECKED","SET_CARBOHYDRATES_CHECKED","SET_NUMBER_CHECKED","SET_START_END","CHANGE_GOAL","isLoggedin","dispatch","type","changeGoal","goalName","goal","LoginPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","redirectProfile","skipPressed","bind","assertThisInitialized","pic","require","react_default","a","createElement","getItem","parse","Zi","diff","unix","expires_at","className","src","alt","react_router_dom","to","onClick","google_login","autoLoad","clientId","scope","approvalPrompt","onSuccess","onFailure","responseType","buttonText","Component","mapDispatchToProps","firstname","lastname","connect","patient","getStringsFromLOINC","LOINC","strings","unitDisplayString","observationDisplayName","unit","UCUMCode","FHIRCommunication","readAllObservations","q1","URLSearchParams","set","client","request","concat","pageLimit","flat","observations","addPatient","patientJSON","resourceType","id","meta","versionId","lastUpdated","security","system","code","display","identifier","use","coding","active","family","given","gender","_gender","extension","url","valueCodeableConcept","link","other","reference","fhirUrl","optionsPatient","method","cache-control","Connection","accept-encoding","Accept","Content-Type","body","addObservations","i","length","undefined","addObservation","datasetIndex","nSets","j","slice","max","observationId","_getStringsFromLOINC","components","valueQuantity","valuePeriod","observationJSON","status","text","subject","component","optionsObservation","observation","addPatientIfNeeded","readAllGoals","FHIR","serverUrl","goalsMsg","stateGoals","goals","note","lower","target","detailRange","low","upper","high","detailQuantity","setGoals","userLoggedOut","baseInfo","react","react_router","LoginPage_loginPage","React","CardComponent","cardClassName","shards_react_es","title","content","BLOODSUGAR","INSULIN","STEPS","WEIGHT","PHYSICAL_ACTIVITY","CARBOHYDRATES","chartDataByDataType","_chartDataByDataType","defineProperty","chartType","color","getDomain","aggregatedData","minWeight","map","y","reduce","b","maxWeight","ceil","getGoal","WeightGoal","CarbsGoal","PhysicalActivityGoal","StepsGoal","MeanGlucoseGoal","periodFromView","view","periodName","periodNumber","intervalName","intervalNumber","getStartEndTimes","nrOfIntervalsBack","_periodFromView","add","findStartAndEndIndex","startIndex","endIndex","endIndexFound","isBefore","isAfter","aggregateData","inData","interval","startString","endString","outputFormat","_findStartAndEndIndex","slicedData","inputFormat","slicedLength","aggregated","x","currentDataTime","sum","startOf","added","skipped","FakeGlucoseData","currX","sin","cos","reverse","getFormat","filterActivityByDate","concatenatedData","values","c","_ref","getAggregatedDataForDataType","dataSets","pageType","dateFormat","_fakeDataForDataType","startEndTimes","_getStartEndTimes","startPrev","endPrev","sleepArray","activityArray","notActiveArray","walkingArray","notClassifiedArray","googleType","sortActivity","prefix","dataLength","random","fakeCarbData","fakeInsulinData","getData","fakeDataForDataType","time","counter","averageData","getAggregatedData","filter","fakeData","DashboardGraph","chartData","chartMargin","top","right","bottom","left","barColor","yAxis","es6","domain","hide","xAxis","height","dataKey","tick","goalLabel","refValue","helpLines","refLabel","goalLine","stroke","strokeDasharray","label","position","fill","refLine","width","margin","dot","strokeWidth","r","_helpLines","BloodSugarContent","upTrianglePic","downTrianglePic","Fragment","dashboardGraph","style","rc_progress_es","strokeColor","percent","trailWidth","borderBottom","display_button","secondary","ChevronRightRounded_default","AddDataContent","inline_button","changeGoalsContent","compareDataContent","InsightButton","justifyContent","alignItems","alignSelf","linkTo","DashboardGraphCard","makeGraph","makeContent","trend","getStaticTrend","marginBottom","insightButton","_cardInfoByDataType$t","cardInfoByDataType","Card_cardComponent","_cardInfoByDataType","Dashboard","DashboardContent_bloodSugarContent","dashboardGraphCard","styles","margin-left","margin-top","margin-right","marginRight","addDataContent","src_FHIRCommunication","NavigationBar","document","getElementById","scrollBy","behavior","currentPage","window","location","pathname","split","scrollPositions","activeClassName","scrollLeft","scrollRight","bloodsugar","insulin","physicalactivity","carbohydrates","Trends","upperLimit","lowerLimit","timeAbove","timeBelow","timeWithin","mean","TrendGoalsCard","displayUnit","datatype","trendGoalsContent","trends","trendValue","goalValue","_Trends","unitMiddle","hasUpperLimit","upperGoal","lowerGoal","pieSideSize","lowerIsBetter","BloodSugarWithinRangePercentageGoal","BloodSugarRangeGoal","prevAggregated","prevTrends","abs","e","COLORS","pieData","lowerTextValue","upperTextValue","lowerText","upperText","goalText","arrowAngle","goalArrowPic","angles","PI","triangleAngle","centerX","centerY","pointString","nameKey","startAngle","endAngle","innerRadius","outerRadius","cx","cy","returnString","textAnchor","dominantBaseline","labelLine","entry","key","points","PeriodStepper","leftClicked","setNrOfIntervalsBack","toString","rightClicked","chevronColor","ChevronLeftRounded_default","InsightGraph","offset","fontSize","GraphCard","graphContent","insightGraph","PeriodStepper_periodStepper","PatternCard","patternCardContent","fluctuationText","greatestChangeText","changeValue","squigglyLinePic","triangleUpPic","triangleDownPic","fluctuation","greatestChange","_this$props$greatestC","_this$props$greatestC2","slicedToArray","triangle","DateDropdown","getState","open","toggle","setState","prevState","_this2","onChange","setView","defaultValue","ViewCard","DateDropdown_dateDropdown","CompareDataCard","GoalCard","DateSelector","startChanged","newStart","setStartEnd","endChanged","newEnd","startDate","endDate","react_dates","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","numberOfMonths","isOutsideRange","day","firstDayOfWeek","DateSelectorCard","DateSelector_dateSelector","bloodSugarFluctuations","bloodSugarGreatestChange","BloodSugarInsight","marginLeft","NavigationBar_navigationBar","viewCard","DateSelectorCard_dateSelectorCard","graphCard","InsightCards_trendGoalsCard","InsightCards_patternCard","goalCard","compareDataCard","stepsGreatestPeriod","greatestValueObject","prev","current","getPatternTextGreatestValue","period","valueObj","StepInsight","InsulinInsight","WeightInsight","CarbohydrateInsight","PhysicalActivityInsight","addGoal","goalId","descriptionText","goalJSON","description","lifecycleStatus","goalOptions","BloodSugarPopupContent","handleSave","percentGoal","goalRange","handlepercentGoalChange","event","handlelowerLimitChange","handleupperLimitChange","render","onSave","BloodSugarMeanPopupContent","handleChange","CarbsPopupContent","PhysicalActivityPopupContent","StepsPopupContent","WeightPopupContent","ChangeGoalButton","handleClick","preventDefault","bloodSugarPopupContent","bloodSugarMeanPopupContent","stepsPopupContent","weightPopupContent","physicalActivityPopupContent","carbsPopupContent","button","EditOutlined_default","lightbox","molecules_lightbox","isVisible","onClose","noAbort","noCloseButton","noPadding","small","medium","large","popupContent","GoalContent","goalContent","xPos","generalColors","overColors","dataSet","activeMin","CustomLabel","ChangeGoalButton_changeGoalButton","value1","value2","alignmentBaseline","MyGoals","GoalContent_goalContent","CompareDataGraph","MultipleGraphCard","compareDataGraph","makePeriodStepper","dataTypes","bloodSugar","bloodSugarChecked","insulinChecked","stepsChecked","weightChecked","physicalActivity","physicalActivityChecked","carbohydratesChecked","xAxisTicks","DataTypeCard","numberChecked","checkboxes","checked","scrollIntoView","errorMessage","setNumberChecked","setBloodSugarChecked","setInsulinChecked","setStepsChecked","setWeightChecked","setPhysicalActivityChecked","setCarbohydratesChecked","makeCheckBox","checkbox_group_default","makeErrorMessage","makeColorCategories","background","GoToInsightCard","CompareData","multipleGraphCard","dataTypeCard","goToInsightCard","NotFoundPage","PageNotFound","MenuBar","isToggleOn","isToggleOn2","toggle2","loggedOut","setWrapperRef","handleClickOutside","removeItem","node","wrapperRef","contains","addEventListener","removeEventListener","menu","menu2","Tiles_default","padding","ChevronDownRounded_default","transform","ref","Menu_default","StartFromTop","prevProps","scrollTo","children","withRouter","App","src_StartFromTop","MenuBar_menuBar","exact","path","Pages_NotFoundPage_NotFoundPage","initialState","fullname","persistDataLocally","store","next","action","reducer","combineReducers","arguments","objectSpread","newGoals","middlewares","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","apply","ReactDOM","es","src_App"],"mappings":"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","file":"static/js/main.509d0d60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/greenUpTriangle.01e55357.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashGreenDownArrow.28201ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/medErrorImage.4a768aab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ehelse.dadcdf72.svg\";","module.exports = __webpack_public_path__ + \"static/media/greenDownTriangle.82a3b37a.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashBlueUpArrow.a032ca9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashOrangeDownArrow.fd3409a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashGreenUpArrow.de3638c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/goalArrow.3d79d529.svg\";","module.exports = __webpack_public_path__ + \"static/media/yellowDownTriangle.a47c2b42.svg\";","module.exports = __webpack_public_path__ + \"static/media/squigglyPatternIcon.59d2036f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinkUpTriangle.81028428.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinkDownTriangle.3dbce719.svg\";","import axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\n/*\r\n * Handles all communication with googleFit, once the user has logged in.\r\n */\r\n\r\nvar urlBase =\r\n  \"https://www.googleapis.com/fitness/v1/users/me/dataSources/derived:com.google.\";\r\n\r\n//1533122511000000000-1564658652000000000 - 01.01.18-01.01.19\r\nvar startDate = moment().subtract(1, \"year\").format(\"X\") + \"000000000\"\r\nvar endDate = moment().format(\"X\") + \"000000000\"\r\nvar dataSetInterval = startDate + \"-\" + endDate;\r\n\r\n\r\nexport function getUserSteps(response) {\r\n  return axios.get(\r\n    urlBase +\r\n      \"step_count.delta:com.google.android.gms:estimated_steps/datasets/\" +\r\n      dataSetInterval,\r\n    { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n  );\r\n}\r\n\r\nexport function getUserWeight(response) {\r\n  return axios.get(\r\n    urlBase +\r\n      \"weight:com.google.android.gms:merge_weight/datasets/\" +\r\n      dataSetInterval,\r\n    { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n  );\r\n}\r\n\r\n// export function getUserHeight(response) {\r\n//   return axios.get(\r\n//     urlBase +\r\n//       \"height:com.google.android.gms:merge_height/datasets/\" + dataSetInterval,\r\n//     { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n//   );\r\n// }\r\n\r\n// export function getUserHeartBeat(response) {\r\n//   return axios.get(\r\n//     urlBase +\r\n//       \"heart_rate.bpm:com.google.android.gms:merge_heart_rate_bpm/datasets/\" + dataSetInterval,\r\n//     { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n//   );\r\n// }\r\n\r\n// export function getUserBloodPressure(response) {\r\n//   return axios.get(\r\n//     urlBase +\r\n//       \"blood_pressure:com.google.android.gms:merged/datasets/\" + dataSetInterval,\r\n//     { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n//   );\r\n// }\r\n\r\n// export function getUserBloodGlucose(response) {\r\n//   return axios.get(\r\n//     urlBase +\r\n//       \"blood_glucose:com.google.android.gms:merged/datasets/\" + dataSetInterval,\r\n//     { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n//   );\r\n// }\r\n\r\nexport function getUserActivities(response) {\r\n  return axios.get(\r\n    urlBase +\r\n      \"activity.segment:com.google.android.gms:merge_activity_segments/datasets/\" +\r\n      dataSetInterval,\r\n    { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n  );\r\n}\r\n\r\n// export function getUserBatchedActivity(response) {\r\n//   return axios.get(\r\n//     urlBase +\r\n//       \"activity.segment:com.google.android.gms:session_activity_segment/datasets/\" + dataSetInterval,\r\n//     { headers: { Authorization: \"Bearer \" + response.accessToken } }\r\n//   );\r\n// }\r\n\r\nexport function formatNanosec(ns) {\r\n  let momentObject = moment(Math.floor(ns / 1000000));\r\n  return momentObject.format(\"YYYY-MM-DDTHH:mm:ss\"); // Conforms to FHIR standard\r\n}\r\n\r\nexport function structureDatasets(dataType) {\r\n  let measurements = [];\r\n  let currentValue;\r\n  let startTime;\r\n  let endTime;\r\n  let intervalSeconds;\r\n  let secondValue;\r\n  let currentNano;\r\n  let currentIntervalLength;\r\n  let intervalValueSum;\r\n  let startNanos;\r\n  let endNanos;\r\n\r\n  const nanoSecFactor = 1000000000;\r\n  dataType.data.point.forEach((item, index) => {\r\n    if (item.value[0].intVal) {\r\n      currentValue = item.value[0].intVal;\r\n    } else if (item.value[0].fpVal) {\r\n      currentValue = item.value[0].fpVal;\r\n    } else {\r\n      return;\r\n    }\r\n    startNanos = parseInt(item.startTimeNanos, 10);\r\n    endNanos = parseInt(item.endTimeNanos, 10);\r\n    intervalSeconds = (endNanos - startNanos) / nanoSecFactor;\r\n    if (intervalSeconds <= 60) {\r\n      startTime = formatNanosec(startNanos);\r\n      endTime = formatNanosec(endNanos);\r\n      measurements.push({\r\n        start: startTime,\r\n        end: endTime,\r\n        value: currentValue\r\n      });\r\n    } else {\r\n      secondValue = currentValue / intervalSeconds;\r\n      currentNano = startNanos;\r\n      intervalValueSum = 0;\r\n      while (intervalSeconds > 0) {\r\n        currentIntervalLength = Math.min(60, intervalSeconds);\r\n        if (currentIntervalLength === 60) {\r\n          intervalValueSum += Math.floor(secondValue * currentIntervalLength);\r\n          measurements.push({\r\n            start: formatNanosec(currentNano),\r\n            end: formatNanosec(\r\n              currentNano + currentIntervalLength * nanoSecFactor\r\n            ),\r\n            value: Math.floor(secondValue * currentIntervalLength)\r\n          });\r\n        } else {\r\n          measurements.push({\r\n            start: formatNanosec(currentNano),\r\n            end: formatNanosec(\r\n              currentNano + currentIntervalLength * nanoSecFactor\r\n            ),\r\n            value: currentValue - intervalValueSum\r\n          });\r\n        }\r\n        intervalSeconds -= currentIntervalLength;\r\n        currentNano += currentIntervalLength * nanoSecFactor;\r\n      }\r\n    }\r\n  });\r\n  return measurements;\r\n}\r\n\r\nexport function responseGoogle(response) {\r\n  console.log(\"Saving google client to localStorage\");\r\n  sessionStorage.setItem(\"googleResponse\", JSON.stringify(response));\r\n\r\n  axios\r\n    .all([\r\n      getUserSteps(response),\r\n      getUserWeight(response),\r\n      getUserActivities(response)\r\n      // getUserHeight(response),\r\n      // getUserHeartBeat(response),\r\n      // getUserBloodPressure(response),\r\n      // getUserBloodGlucose(response),\r\n      // getUserBatchedActivity(response)\r\n    ])\r\n    .then(\r\n      axios.spread((\r\n        steps,\r\n        weight,\r\n        activities\r\n        // height,\r\n        // heartBeat,\r\n        // bloodPressure,\r\n        // bloodGlucose,\r\n        // batchedActivities\r\n      ) => {\r\n        let datasets = [];\r\n\r\n        let stepMeasurement = structureDatasets(steps);\r\n        let weightMeasurement = structureDatasets(weight);\r\n        let activitiesMeasurement = structureDatasets(activities);\r\n        // let heightMeasurement = structureDatasets(height);\r\n        // let heartBeatMeasurement = structureDatasets(heartBeat);\r\n        // let bloodPressureMeasurement = structureDatasets(bloodPressure);\r\n        // let bloodGlucoseMeasurement = structureDatasets(bloodGlucose);\r\n        // let batchedActivitiesMeasurement = structureDatasets(batchedActivities);\r\n\r\n        datasets.push(\r\n          { name: \"55423-8\", measurements: stepMeasurement },\r\n          { name: \"29463-7\", measurements: weightMeasurement },\r\n          { name: \"77595-7\", measurements: activitiesMeasurement }\r\n          // { name: \"8302-2\", measurements: heightMeasurement },\r\n          // { name: \"8867-4\", measurements: heartBeatMeasurement },\r\n          // { name: \"85354-9\", measurements: bloodPressureMeasurement },\r\n          // { name: \"2339-0\", measurements: bloodGlucoseMeasurement },\r\n          // { name: \"batchedActivities\", measurements: batchedActivitiesMeasurement }\r\n        );\r\n\r\n        this.props.addInfo(\r\n          response.profileObj.googleId,\r\n          response.profileObj.givenName,\r\n          response.profileObj.familyName,\r\n          response.profileObj.email,\r\n          datasets\r\n        );\r\n\r\n        this.props.onLoggedIn(true);\r\n      })\r\n    )\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n}","export const SET_PATIENT = \"PATIENT/SET_PATIENT\";\r\nexport const IS_LOGGED_IN = \"IS_LOGGED_IN\";\r\nexport const SET_GOALS = \"SET_GOALS\";\r\nexport const SET_VIEW = \"SET_VIEW\";\r\nexport const SET_NR_OF_INTERVALS_BACK = \"SET_NR_OF_INTERVALS_BACK\";\r\nexport const SET_BLOOD_SUGAR_CHECKED = \"SET_BLOOD_SUGAR_CHECKED\";\r\nexport const SET_INSULIN_CHECKED = \"SET_INSULIN_CHECKED\";\r\nexport const SET_STEPS_CHECKED = \"SET_STEPS_CHECKED\";\r\nexport const SET_WEIGHT_CHECKED = \"SET_WEIGHT_CHECKED\";\r\nexport const SET_PHYSICAL_ACTIVITY_CHECKED = \"SET_PHYSICAL_ACTIVITY_CHECKED\";\r\nexport const SET_CARBOHYDRATES_CHECKED = \"SET_CARBOHYDRATES_CHECKED\";\r\nexport const SET_NUMBER_CHECKED = \"SET_NUMBER_CHECKED\";\r\nexport const SET_START_END = \"SET_START_END\";\r\nexport const CHANGE_GOAL = \"CHANGE_GOAL\";","import {\r\n  SET_PATIENT,\r\n  IS_LOGGED_IN,\r\n  SET_GOALS,\r\n  SET_VIEW,\r\n  SET_NR_OF_INTERVALS_BACK,\r\n  SET_BLOOD_SUGAR_CHECKED,\r\n  SET_INSULIN_CHECKED,\r\n  SET_STEPS_CHECKED,\r\n  SET_WEIGHT_CHECKED,\r\n  SET_PHYSICAL_ACTIVITY_CHECKED,\r\n  SET_CARBOHYDRATES_CHECKED,\r\n  SET_NUMBER_CHECKED,\r\n  SET_START_END,\r\n  CHANGE_GOAL\r\n} from \"./actionType\";\r\n\r\nexport const addInfo = (googleId, firstname, lastname, email, datasets) => {\r\n  return dispatch =>\r\n    dispatch({\r\n      type: SET_PATIENT,\r\n      googleId,\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      datasets\r\n    });\r\n};\r\nexport const onLoggedIn = isLoggedin => {\r\n  return dispatch => dispatch({ type: IS_LOGGED_IN, isLoggedin });\r\n};\r\nexport const setGoals = goals => {\r\n  return dispatch => dispatch({ type: SET_GOALS, goals });\r\n};\r\nexport const setView = view => {\r\n  return dispatch => dispatch({ type: SET_VIEW, view });\r\n};\r\nexport const setStartEnd = (start, end) => {\r\n  return dispatch => dispatch({ type: SET_START_END, start, end });\r\n};\r\n\r\nexport const setNrOfIntervalsBack = nrOfIntervalsBack => {\r\n  return dispatch =>\r\n    dispatch({ type: SET_NR_OF_INTERVALS_BACK, nrOfIntervalsBack });\r\n};\r\n\r\nexport const setBloodSugarChecked = bloodSugarChecked => {\r\n  return dispatch =>\r\n    dispatch({ type: SET_BLOOD_SUGAR_CHECKED, bloodSugarChecked });\r\n};\r\n\r\nexport const setInsulinChecked = insulinChecked => {\r\n  return dispatch => dispatch({ type: SET_INSULIN_CHECKED, insulinChecked });\r\n};\r\n\r\nexport const setStepsChecked = stepsChecked => {\r\n  return dispatch => dispatch({ type: SET_STEPS_CHECKED, stepsChecked });\r\n};\r\n\r\nexport const setWeightChecked = weightChecked => {\r\n  return dispatch => dispatch({ type: SET_WEIGHT_CHECKED, weightChecked });\r\n};\r\n\r\nexport const setPhysicalActivityChecked = physicalActivityChecked => {\r\n  return dispatch =>\r\n    dispatch({ type: SET_PHYSICAL_ACTIVITY_CHECKED, physicalActivityChecked });\r\n};\r\n\r\nexport const setCarbohydratesChecked = carbohydratesChecked => {\r\n  return dispatch =>\r\n    dispatch({ type: SET_CARBOHYDRATES_CHECKED, carbohydratesChecked });\r\n};\r\n\r\nexport const setNumberChecked = numberChecked => {\r\n  return dispatch => dispatch({ type: SET_NUMBER_CHECKED, numberChecked });\r\n};\r\n\r\nexport const changeGoal = (goalName, goal) => {\r\n  // console.log(\"gn: \", goalName);\r\n  // console.log(\"g: \", goal);\r\n  return dispatch => dispatch({ type: CHANGE_GOAL, goalName, goal });\r\n};","import React, { Component } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { responseGoogle } from \"../../API/googleFit\";\r\nimport { addInfo, onLoggedIn } from \"../../Redux/actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./loginPage.css\";\r\n\r\n/*\r\n * Simple login page for login into google that then handles communication with the fhir server\r\n * and redirects to the dashboard.\r\n */\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirectProfile: false\r\n    };\r\n    this.skipPressed = this.skipPressed.bind(this);\r\n  }\r\n\r\n  // Tried to make the page skip google login to display default values,\r\n  // but we do not set autogenerated data for every usecase.\r\n  skipPressed() {\r\n    this.props.onLoggedIn(true);\r\n  }\r\n\r\n  render() {\r\n    const pic = require(\"../../Images/ehelse.svg\");\r\n    if (this.state.redirectProfile === true) {\r\n      return <div />;\r\n    }\r\n    if (sessionStorage.getItem(\"googleResponse\")) {\r\n      console.log(\"Reading google client from localStorage\");\r\n      let response = JSON.parse(sessionStorage.getItem(\"googleResponse\"));\r\n      if (\r\n        response.Zi &&\r\n        moment().diff(moment.unix(response.Zi.expires_at / 1000), \"m\") < 0\r\n      ) {\r\n        responseGoogle.bind(this)(response);\r\n        return <div />;\r\n      } // Else move on to login screen because need new login data.\r\n    }\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-12 index-Image-head\">\r\n            <img src={pic} alt={\"logo\"} className=\"index-Image\" />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12 text-generic\">\r\n            <p>Logg inn for å registrere din data</p>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12 login-button\">\r\n            <div className=\"skipLink\">\r\n              <br />\r\n              <div className=\"warining-text\">Advarsel:</div> Prøv gjerne\r\n              løsningen, men den kjører på usikker infrastruktur, bruk helst\r\n              eksempeldata. Hvis du vil teste innlogging med Google og\r\n              synkronisering av data så må du lage en egen konto som du bruker\r\n              for å teste løsningen slik at ikke dine personopplysninger deles.\r\n              <div>\r\n                <br />\r\n                <Link to=\"/dashboard\">\r\n                  <span onClick={this.skipPressed}> Klikk her</span>\r\n                </Link>\r\n                <span className=\"skipText\">\r\n                  for å bruke siden uten Google konto med eksempeldata.\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-12 login-button\">\r\n            {\r\n              <GoogleLogin\r\n                autoLoad={false}\r\n                clientId=\"977336258298-918fs7q5nkhjg0brjgn30kolrn450nks.apps.googleusercontent.com\"\r\n                scope={\r\n                  \"https://www.googleapis.com/auth/fitness.activity.read \" +\r\n                  \"https://www.googleapis.com/auth/fitness.body.read\" //+\r\n                  // \"https://www.googleapis.com/auth/fitness.blood_glucose.read \" +\r\n                  // \"https://www.googleapis.com/auth/fitness.blood_pressure.read \"\r\n                }\r\n                approvalPrompt=\"force\"\r\n                onSuccess={responseGoogle.bind(this)}\r\n                onFailure={responseGoogle.bind(this)}\r\n                responseType=\"id_token\"\r\n                className=\"google-login-button\"\r\n                buttonText=\"Logg inn med din Google-konto\"\r\n              />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { addInfo, onLoggedIn };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginPage);\r\n","export default function getStringsFromLOINC(LOINC) {\r\n  let strings = {};\r\n  switch (LOINC) {\r\n    case \"55423-8\": // steps\r\n      strings = {\r\n        unitDisplayString: \"Number of steps in unspecified time Pedometer\",\r\n        observationDisplayName: \"Step count\",\r\n        unit: \"steps/day\",\r\n        UCUMCode: \"/d\"\r\n      };\r\n      break;\r\n    case \"8867-4\": // heart rate\r\n      strings = {\r\n        unitDisplayString: \"Heart rate\",\r\n        observationDisplayName: \"Heart rate\",\r\n        unit: \"beats/minute\",\r\n        UCUMCode: \"/min\"\r\n      };\r\n      break;\r\n    case \"2339-0\": // blood glucose\r\n      strings = {\r\n        unitDisplayString: \"Glucose Bld-mCnc\",\r\n        observationDisplayName: \"Glucose Bld-mCnc\",\r\n        unit: \"mg/dL\",\r\n        UCUMCode: \"mg/dL\"\r\n      };\r\n      break;\r\n    case \"85354-9\": // blood pressure\r\n      strings = {\r\n        unitDisplayString: \"Blood pressure panel with all children optional\",\r\n        observationDisplayName: \"Blood pressure systolic & diastolic\",\r\n        unit: \"mmHg\",\r\n        UCUMCode: \"mm[Hg]\"\r\n      };\r\n      break;\r\n    case \"8302-2\": // height\r\n      strings = {\r\n        unitDisplayString: \"Body height\",\r\n        observationDisplayName: \"Body height\",\r\n        unit: \"m\",\r\n        UCUMCode: \"m\"\r\n      };\r\n      break;\r\n    case \"29463-7\": // weight\r\n      strings = {\r\n        unitDisplayString: \"Body weight\",\r\n        observationDisplayName: \"Body weight\",\r\n        unit: \"kg\",\r\n        UCUMCode: \"kg\"\r\n      };\r\n      break;\r\n    case \"77595-7\": // Activity\r\n      strings = {\r\n        unitDisplayString: \"Activity\",\r\n        observationDisplayName: \"Activity\",\r\n        unit: \"\",\r\n        UCUMCode: \"\"\r\n      };\r\n      break;\r\n    default:\r\n      strings = {\r\n        unitDisplayString: \"Activity\",\r\n        observationDisplayName: \"Activity\",\r\n        unit: \"\",\r\n        UCUMCode: \"\"\r\n      };\r\n  }\r\n  return strings;\r\n}\r\n","import * as React from \"react\";\r\nimport * as FHIR from \"fhirclient\";\r\nimport moment from \"moment\";\r\nimport HomePage from \"./Pages/LoginPage/loginPage\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setGoals } from \"./Redux/actions\";\r\nimport getStringsFromLOINC from \"./Utils/getStringsFromLOINC\";\r\nimport fhirUrl from \"./fhirUrl\";\r\n\r\n/*\r\n * File for handling initial communication with the fhir server.\r\n * Uses the server url set in fhirUrl.\r\n */\r\n\r\nclass FHIRCommunication extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: FHIR.client({\r\n        serverUrl: fhirUrl()\r\n      }),\r\n      userLoggedOut: false\r\n    };\r\n  }\r\n\r\n  readAllObservations = () => {\r\n    console.log(\r\n      \"Reading all observations the patient has in the FHIR database\"\r\n    );\r\n    const q1 = new URLSearchParams();\r\n    q1.set(\"subject\", this.props.patient.googleId);\r\n    this.state.client\r\n      .request(`Observation?${q1}`, {\r\n        pageLimit: 0,\r\n        flat: true\r\n      })\r\n      .then(observations => {\r\n        console.log(observations);\r\n      });\r\n  };\r\n\r\n  addPatient = () => {\r\n    let patientJSON = {\r\n      resourceType: \"Patient\",\r\n      id: this.props.patient.googleId,\r\n      meta: {\r\n        versionId: \"1\",\r\n        lastUpdated: moment().format(\"YYYY-MM-DDThh:mm:ss\"),\r\n        security: [\r\n          {\r\n            system: \"http://terminology.hl7.org/CodeSystem/v3-ActReason\",\r\n            code: \"HTEST\",\r\n            display: \"test health data\"\r\n          }\r\n        ]\r\n      },\r\n      identifier: [\r\n        {\r\n          use: \"usual\",\r\n          type: {\r\n            coding: [\r\n              {\r\n                system: \"http://terminology.hl7.org/CodeSystem/v2-0203\",\r\n                code: \"MR\"\r\n              }\r\n            ]\r\n          },\r\n          system: \"urn:oid:0.1.2.3.4.5.6.7\",\r\n          value: \"0\"\r\n        }\r\n      ],\r\n      active: true,\r\n      name: [\r\n        {\r\n          use: \"official\",\r\n          family: this.props.patient.lastname,\r\n          given: [this.props.patient.firstname, this.props.patient.lastname]\r\n        }\r\n      ],\r\n      gender: \"other\",\r\n      _gender: {\r\n        extension: [\r\n          {\r\n            url: \"http://example.org/Profile/administrative-status\",\r\n            valueCodeableConcept: {\r\n              coding: [\r\n                {\r\n                  system: \"http://terminology.hl7.org/CodeSystem/v2-0001\",\r\n                  code: \"A\",\r\n                  display: \"Ambiguous\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      link: [\r\n        {\r\n          other: {\r\n            reference: fhirUrl() + \"/Patient/\" + this.props.patient.googleId\r\n          },\r\n          type: \"seealso\"\r\n        }\r\n      ]\r\n    };\r\n    let optionsPatient = {\r\n      method: \"PUT\",\r\n      url: fhirUrl() + \"/Patient/\" + this.props.patient.googleId,\r\n      headers: {\r\n        \"cache-control\": \"no-cache\",\r\n        Connection: \"keep-alive\",\r\n        \"accept-encoding\": \"gzip, deflate\",\r\n        Accept: \"*/*\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(patientJSON)\r\n    };\r\n\r\n    console.log(\"Adding patient to FHIR database\");\r\n    this.state.client\r\n      .request(optionsPatient, (error, response, body) => {})\r\n      .then(patient => {\r\n        // console.log(\"Newly added patient: \", patient);\r\n      });\r\n  };\r\n\r\n  addObservations = () => {\r\n    for (let i = 0; i < this.props.patient.datasets.length; i++) {\r\n      if (\r\n        this.props.patient.datasets[i].measurements.length > 1 ||\r\n        this.props.patient.datasets[i].measurements.value !== undefined\r\n      ) {\r\n        // console.log(this.props.patient.datasets[i].name);\r\n        this.addObservation(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  addObservation = datasetIndex => {\r\n    const lenghtOfOneFhirDataset = 1000;\r\n    let nSets =\r\n      this.props.patient.datasets[datasetIndex].measurements.length /\r\n      lenghtOfOneFhirDataset;\r\n\r\n    for (let j = 0; j < nSets; j++) {\r\n      let data = this.props.patient.datasets[datasetIndex].measurements.slice(\r\n        Math.max(0, (j - 1) * lenghtOfOneFhirDataset),\r\n        Math.min(\r\n          j * lenghtOfOneFhirDataset,\r\n          this.props.patient.datasets[datasetIndex].measurements.length\r\n        )\r\n      );\r\n      let observationId;\r\n      if (j === 0) {\r\n        observationId = this.props.patient.datasets[datasetIndex].name;\r\n      } else {\r\n        observationId =\r\n          this.props.patient.datasets[datasetIndex].name + \"-\" + j;\r\n      }\r\n      // Note on the above: this could also be set from uuid(),\r\n      // but this makes it harder to overwrite all existing datasets\r\n      let {\r\n        unitDisplayString,\r\n        observationDisplayName,\r\n        unit,\r\n        UCUMCode\r\n      } = getStringsFromLOINC(this.props.patient.datasets[datasetIndex].name);\r\n      let components = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        components.push({\r\n          valueQuantity: {\r\n            value: data[i].value,\r\n            unit: unit,\r\n            system: \"http://unitsofmeasure.org\",\r\n            code: UCUMCode\r\n          },\r\n          code: { coding: { code: \"value\" } }\r\n        });\r\n        components.push({\r\n          valuePeriod: {\r\n            start: data[i].start,\r\n            end: data[i].end\r\n          },\r\n          code: { coding: { code: \"time\" } }\r\n        });\r\n      }\r\n\r\n      let observationJSON = {\r\n        resourceType: \"Observation\",\r\n        id: observationId,\r\n        meta: {\r\n          versionId: \"1\",\r\n          lastUpdated: moment().format(\"YYYY-MM-DDThh:mm:ss\")\r\n        },\r\n        status: \"final\",\r\n        code: {\r\n          coding: [\r\n            {\r\n              system: \"http://loinc.org\",\r\n              code: this.props.patient.datasets[datasetIndex].name,\r\n              display: unitDisplayString\r\n            }\r\n          ],\r\n          text: observationDisplayName\r\n        },\r\n        subject: {\r\n          reference: fhirUrl() + \"/Patient/\" + this.props.patient.googleId\r\n        },\r\n        component: components\r\n      };\r\n\r\n      let optionsObservation = {\r\n        method: \"PUT\",\r\n        url: fhirUrl() + \"/Observation/\" + observationId,\r\n        headers: {\r\n          \"cache-control\": \"no-cache\",\r\n          Connection: \"keep-alive\",\r\n          \"accept-encoding\": \"gzip, deflate\",\r\n          Accept: \"*/*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(observationJSON)\r\n      };\r\n\r\n      console.log(\"Adding observation to FHIR database\");\r\n      this.state.client\r\n        .request(optionsObservation, (error, response, body) => {})\r\n        .then(observation => {\r\n          // console.log(observation);\r\n          // this.setState({ observation });\r\n        });\r\n    }\r\n  };\r\n\r\n  addPatientIfNeeded = () => {\r\n    console.log(\"Reading patient from FHIR database\");\r\n    const q1 = new URLSearchParams();\r\n    q1.set(\"id\", this.props.patient.googleId);\r\n    this.state.client\r\n      .request(`Patient/${this.props.patient.googleId}`, {\r\n        pageLimit: 0,\r\n        flat: true\r\n      })\r\n      .then(patient => {\r\n        // console.log(patient);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Patient didn't already exist in FHIR database\");\r\n        this.addPatient();\r\n      });\r\n  };\r\n\r\n  readAllGoals = () => {\r\n    console.log(\"Reading all goals the patient has in the FHIR database\");\r\n    const q1 = new URLSearchParams();\r\n    q1.set(\"subject\", this.props.patient.googleId);\r\n    let client = FHIR.client({\r\n      serverUrl: fhirUrl()\r\n    });\r\n    client\r\n      .request(`Goal?${q1}`, {\r\n        pageLimit: 0,\r\n        flat: true\r\n      })\r\n      .then(goalsMsg => {\r\n        let stateGoals = this.props.patient.goals;\r\n        goalsMsg.forEach(item => {\r\n          if (item.note) {\r\n            if (item.note[0].text === \"range\") {\r\n              stateGoals[item.id] = {\r\n                type: item.note[0].text,\r\n                lower: item.target[0].detailRange.low.value,\r\n                upper: item.target[0].detailRange.high.value,\r\n                unit: item.target[0].detailRange.low.unit\r\n              };\r\n            } else {\r\n              stateGoals[item.id] = {\r\n                type: item.note[0].text,\r\n                value: item.target[0].detailQuantity.value,\r\n                unit: item.target[0].detailQuantity.unit\r\n              };\r\n            }\r\n          }\r\n        });\r\n        console.log(\"Goals from fhir\", goalsMsg);\r\n        this.props.setGoals(stateGoals);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      return (\r\n        <div>\r\n          {/* moved them here, seems to have solved some issues, gets called after login has saved info to redux */}\r\n          {this.addPatientIfNeeded()}\r\n          {this.addObservations()}\r\n          {this.readAllObservations()}\r\n          {this.readAllGoals()}\r\n          <Redirect to=\"/dashboard\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <HomePage />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setGoals };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FHIRCommunication);\r\n","/*\r\n * Function used to get the url of the fhir server. Set useLocalServer = false to use the external fhir server.\r\n */\r\n\r\nexport default function fhirUrl() {\r\n  let useLocalServer = false;\r\n  if (useLocalServer) {\r\n    return \"https://localhost:5001/fhir\";\r\n  } else {\r\n    return \"https://pasientdata-fhir-api.azurewebsites.net/fhir\";\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardTitle, CardBody } from \"shards-react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\";\r\n\r\nimport \"./cardComponent.css\";\r\n\r\n/*\r\n * General card component used all throughout the project. Must title and content props.\r\n */\r\n\r\nclass CardComponent extends Component {\r\n  render() {\r\n    const cardClassName = this.props.className\r\n      ? \"flex-card \" + this.props.className\r\n      : \"flex-card\";\r\n    return (\r\n      <Card className={cardClassName}>\r\n        <CardBody>\r\n          {this.props.title && <CardTitle>{this.props.title}</CardTitle>}\r\n          {this.props.content}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardComponent;","export const BLOODSUGAR = \"bloodsugar\";\r\nexport const INSULIN = \"insulin\";\r\nexport const STEPS = \"steps\";\r\nexport const WEIGHT = \"weight\";\r\nexport const PHYSICAL_ACTIVITY = \"physical_activity\";\r\nexport const CARBOHYDRATES = \"carbohydrates\";\r\n\r\nexport const chartDataByDataType = {\r\n  [BLOODSUGAR]: {\r\n    chartType: \"line\",\r\n    unit: \"mmol/l\",\r\n    color: \"#E71D37\"\r\n  },\r\n  [INSULIN]: {\r\n    chartType: \"bar\",\r\n    unit: \"U\",\r\n    color: \"#85C99E\"\r\n  },\r\n  [STEPS]: {\r\n    chartType: \"bar\",\r\n    unit: \"skritt\",\r\n    color: \"#59C3FF\"\r\n  },\r\n  [WEIGHT]: {\r\n    chartType: \"line\",\r\n    unit: \"kg\",\r\n    color: \"#E38B21\"\r\n  },\r\n  [PHYSICAL_ACTIVITY]: {\r\n    chartType: \"bar\",\r\n    unit: \"min\",\r\n    color: \"#EF87CE\"\r\n  },\r\n  [CARBOHYDRATES]: {\r\n    chartType: \"bar\",\r\n    unit: \"g\",\r\n    color: \"#EEE05D\"\r\n  }\r\n};\r\n\r\nexport const getDomain = (dataType, aggregatedData) => {\r\n  if (dataType === WEIGHT) {\r\n    const minWeight = aggregatedData\r\n      .map(data => data.y)\r\n      .reduce((a, b) => Math.min(a, b));\r\n    const maxWeight = aggregatedData\r\n      .map(data => data.y)\r\n      .reduce((a, b) => Math.max(a, b));\r\n    return [Math.floor(minWeight) - 5, Math.ceil(maxWeight) + 3];\r\n  }\r\n  if (dataType === CARBOHYDRATES) {\r\n    return [0, 320];\r\n  }\r\n  if (dataType === INSULIN) {\r\n    return [0, 40];\r\n  }\r\n  if (dataType === PHYSICAL_ACTIVITY) {\r\n    return [0, 120];\r\n  }\r\n  if (dataType === STEPS) {\r\n    return [0, 14000];\r\n  }\r\n  if (dataType === BLOODSUGAR) {\r\n    return [5, 10];\r\n  }\r\n};\r\n\r\nexport const getGoal = (patient, dataType) => {\r\n  if (dataType === WEIGHT) {\r\n    return { value: patient.goals.WeightGoal.value, unit: \"kg\" };\r\n  }\r\n  if (dataType === CARBOHYDRATES) {\r\n    return { value: patient.goals.CarbsGoal.value, unit: \"g\" };\r\n  }\r\n  if (dataType === INSULIN) {\r\n    return { value: 35, unit: \"U\" };\r\n  }\r\n  if (dataType === PHYSICAL_ACTIVITY) {\r\n    return {\r\n      value: patient.goals.PhysicalActivityGoal.value / 7,\r\n      unit: \"min\"\r\n    };\r\n  }\r\n  if (dataType === STEPS) {\r\n    return { value: patient.goals.StepsGoal.value };\r\n  }\r\n  if (dataType === BLOODSUGAR) {\r\n    return { value: patient.goals.MeanGlucoseGoal.value, unit: \"\" };\r\n  }\r\n};\r\n","export default function(view) {\r\n  switch (view) {\r\n    case \"day\":\r\n      return {\r\n        periodName: \"day\",\r\n        periodNumber: 1,\r\n        intervalName: \"hour\",\r\n        intervalNumber: \"24\"\r\n      };\r\n    case \"week\":\r\n      return {\r\n        periodName: \"week\",\r\n        periodNumber: 1,\r\n        intervalName: \"day\",\r\n        intervalNumber: \"7\"\r\n      };\r\n\r\n    case \"2weeks\":\r\n      return {\r\n        periodName: \"week\",\r\n        periodNumber: 2,\r\n        intervalName: \"day\",\r\n        intervalNumber: \"14\"\r\n      };\r\n    case \"month\":\r\n      return {\r\n        periodName: \"month\",\r\n        periodNumber: 1,\r\n        intervalName: \"day\",\r\n        intervalNumber: \"30\"\r\n      };\r\n\r\n    case \"3months\":\r\n      return {\r\n        periodName: \"month\",\r\n        periodNumber: 3,\r\n        intervalName: \"week\",\r\n        intervalNumber: \"12\"\r\n      };\r\n    case \"year\":\r\n      return {\r\n        periodName: \"year\",\r\n        periodNumber: 1,\r\n        intervalName: \"month\",\r\n        intervalNumber: \"12\"\r\n      };\r\n\r\n    case \"custom\":\r\n      // @todo Make this smarter.\r\n      return {\r\n        periodName: \"custom\",\r\n        periodNumber: 1,\r\n        intervalName: \"day\",\r\n        intervalNumber: \"7\"\r\n      };\r\n    default:\r\n      return {\r\n        periodName: \"week\",\r\n        periodNumber: 1,\r\n        intervalName: \"day\",\r\n        intervalNumber: \"7\"\r\n      };\r\n  }\r\n}\r\n","import periodFromView from \"./periodFromView\";\r\nimport moment from \"moment\";\r\n\r\nexport default function getStartEndTimes(view, nrOfIntervalsBack) {\r\n  let { periodName, periodNumber, intervalName } = periodFromView(view);\r\n  let diff = parseInt(periodNumber) + parseInt(nrOfIntervalsBack);\r\n  let startTime;\r\n  let endTime;\r\n\r\n  if (intervalName === \"day\") {\r\n    startTime = moment()\r\n      .subtract(diff, periodName)\r\n      .add(1, intervalName)\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    endTime = moment()\r\n      .subtract(nrOfIntervalsBack, periodName)\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n  } else {\r\n    startTime = moment()\r\n      .subtract(diff, periodName)\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    endTime = moment()\r\n      .subtract(nrOfIntervalsBack, periodName)\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n  }\r\n  return {\r\n    start: startTime,\r\n    end: endTime\r\n  };\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport default function findStartAndEndIndex(data, start, end) {\r\n  let startIndex = 0;\r\n  let endIndex = data.length - 1;\r\n  let endIndexFound = false;\r\n\r\n  if (moment(data[0].start).isBefore(end)) {\r\n    if (\r\n      moment(end, \"YYYY-MM-DDTHH:mm:ss\").isAfter(\r\n        moment(data[data.length - 1].start, \"YYYY-MM-DDTHH:mm:ss\")\r\n      )\r\n    ) {\r\n      endIndexFound = true;\r\n    }\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (\r\n        moment(start, \"YYYY-MM-DDTHH:mm:ss\").isAfter(\r\n          moment(data[i].start, \"YYYY-MM-DDTHH:mm:ss\")\r\n        )\r\n      ) {\r\n        startIndex = i; // Index right before the first data point we want to include.\r\n      }\r\n      if (\r\n        !endIndexFound &&\r\n        moment(end, \"YYYY-MM-DDTHH:mm:ss\").isBefore(\r\n          moment(data[i].start, \"YYYY-MM-DDTHH:mm:ss\")\r\n        )\r\n      ) {\r\n        endIndex = i; // Index right after the first data point we want to include.\r\n        break;\r\n      }\r\n    }\r\n    if (!endIndexFound) {\r\n      endIndex--;\r\n    }\r\n    if (startIndex !== data.length - 1 && startIndex > 0) {\r\n      startIndex++;\r\n    }\r\n  } else {\r\n    return { startIndex: 0, endIndex: 0 };\r\n  }\r\n\r\n  return { startIndex: startIndex, endIndex: endIndex };\r\n}\r\n","import moment from \"moment\";\r\nimport findStartAndEndIndex from \"./findStartAndEndIndex\";\r\n\r\nexport default function aggregateData(\r\n  inData,\r\n  interval,\r\n  startString,\r\n  endString,\r\n  outputFormat\r\n) {\r\n  const { startIndex, endIndex } = findStartAndEndIndex(\r\n    inData,\r\n    startString,\r\n    endString\r\n  );\r\n\r\n  let slicedData = inData.slice(startIndex, endIndex);\r\n  const inputFormat = \"YYYY-MM-DDTHH:mm:ss\";\r\n  const startTime = moment(startString, inputFormat);\r\n  const endTime = moment(endString, inputFormat);\r\n  const slicedLength = slicedData.length;\r\n\r\n  /*\r\n   * Loop through the desired dataset and aggregate\r\n   */\r\n\r\n  let aggregated = [];\r\n\r\n  let data = slicedData.map(item => ({ x: item.start, y: item.value }));\r\n  if (data === undefined || data.length === 0) {\r\n    data.push({ y: 0, x: startTime.format(inputFormat) });\r\n  }\r\n  let sum = data[0].y;\r\n  let start = moment(data[0].x, inputFormat).startOf(interval);\r\n\r\n  // Add empty bars at start if needed\r\n  let added = 1;\r\n  while (moment(start).diff(startTime, interval + \"s\") - added > -1) {\r\n    aggregated.push({\r\n      y: 0,\r\n      x: moment(startTime)\r\n        .add(added, interval + \"s\")\r\n        .format(outputFormat)\r\n    });\r\n    added++;\r\n  }\r\n\r\n  let currentDataTime;\r\n  for (let i = 1; i < slicedLength; i++) {\r\n    currentDataTime = moment(data[i].x, inputFormat);\r\n    if (\r\n      moment(start).diff(currentDataTime.startOf(interval), interval + \"s\") ===\r\n      0\r\n    ) {\r\n      sum += data[i].y;\r\n    } else {\r\n      // Add empty bars inbetween if needed\r\n      let skipped = 0;\r\n      aggregated.push({\r\n        y: sum,\r\n        x: start.format(outputFormat)\r\n      });\r\n      while (\r\n        moment(start).diff(currentDataTime, interval + \"s\") + skipped <\r\n        -1\r\n      ) {\r\n        aggregated.push({\r\n          y: 0,\r\n          x: moment(start)\r\n            .add(1 + skipped, interval + \"s\")\r\n            .startOf(interval)\r\n            .format(outputFormat)\r\n        });\r\n        skipped++;\r\n      }\r\n\r\n      sum = data[i].y;\r\n      start = currentDataTime.startOf(interval);\r\n    }\r\n  }\r\n  aggregated.push({ y: sum, x: start.format(outputFormat) });\r\n\r\n  // Add empty bars at end if needed\r\n  while (\r\n    moment(endTime).diff(start.add(1, interval + \"s\"), interval + \"s\") > 0\r\n  ) {\r\n    aggregated.push({ y: 0, x: start.format(outputFormat) });\r\n  }\r\n  if (moment(endTime).diff(start.add(1, interval + \"s\"), interval + \"s\") > -1) {\r\n    aggregated.push({\r\n      y: 0,\r\n      x: start.subtract(1, interval + \"s\").format(outputFormat)\r\n    });\r\n  }\r\n  return aggregated;\r\n}\r\n","import moment from \"moment\";\r\n\r\nfunction FakeGlucoseData() {\r\n  let start = [];\r\n  let end = [];\r\n  let value = [];\r\n  let data = [];\r\n  const period = 10;\r\n  let currX;\r\n  const interval = 8;\r\n  const mean = 9;\r\n  const sum = 15;\r\n  const dataLength = 2000;\r\n  for (let i = 0; i < dataLength; i++) {\r\n    currX = i / period;\r\n    start.push(\r\n      moment()\r\n        .subtract(i, \"minutes\")\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\")\r\n    );\r\n    end.push(\r\n      moment()\r\n        .subtract(i - 1, \"minutes\")\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\")\r\n    );\r\n    value.push(\r\n      ((Math.sin(currX) +\r\n        5 * Math.sin(2 * currX) +\r\n        3 * Math.sin(8 * currX) +\r\n        4 * Math.sin(10 * currX) +\r\n        3 * Math.cos(0.05 * currX)) /\r\n        sum) *\r\n        interval +\r\n        mean\r\n    );\r\n\r\n    data.push({ start: start[i], end: end[i], value: value[i] });\r\n  }\r\n\r\n  return data.reverse();\r\n}\r\n\r\nexport default FakeGlucoseData;\r\n","export default function getFormat(view, interval) {\r\n  switch (view) {\r\n    case \"minute\":\r\n      switch (interval) {\r\n        case \"minute\":\r\n          return \"HH:mm:ss\";\r\n        default:\r\n          return;\r\n      }\r\n    case \"hour\":\r\n      switch (interval) {\r\n        case \"minute\":\r\n          return \"HH:mm\";\r\n        case \"hour\":\r\n          return \"HH:mm\";\r\n        default:\r\n          return;\r\n      }\r\n    case \"day\":\r\n      switch (interval) {\r\n        case \"minute\":\r\n          return \"HH:mm\";\r\n        case \"hour\":\r\n          return \"HH:mm\";\r\n        case \"day\":\r\n          return \"ddd\";\r\n        default:\r\n          return;\r\n      }\r\n    case \"week\":\r\n      switch (interval) {\r\n        case \"minute\":\r\n          return \"HH:mm:ss\";\r\n        case \"hour\":\r\n          return \"ddd HH:mm\";\r\n        case \"day\":\r\n          return \"ddd\";\r\n        case \"week\":\r\n          return \"ww\";\r\n        default:\r\n          return;\r\n      }\r\n    case \"month\":\r\n      switch (interval) {\r\n        case \"minute\":\r\n          return \"HH:mm:ss\";\r\n        case \"hour\":\r\n          return \"DD.MM HH:mm\";\r\n        case \"day\":\r\n          return \"DD.MM\";\r\n        case \"week\":\r\n          return \"ww\";\r\n        case \"month\":\r\n          return \"MM\";\r\n        default:\r\n          return;\r\n      }\r\n    case \"year\":\r\n      switch (interval) {\r\n        case \"minute\":\r\n          return \"MM.DD HH:mm\";\r\n        case \"hour\":\r\n          return \"MM.DD HH:mm\";\r\n        case \"day\":\r\n          return \"DD.MM\";\r\n        case \"week\":\r\n          return \"ww\";\r\n        case \"month\":\r\n          return \"MM.YYYY\";\r\n        case \"year\":\r\n          return \"YYYY\";\r\n        default:\r\n          return;\r\n      }\r\n    default:\r\n      return \"DD.MM.YY\";\r\n  }\r\n}\r\n","import moment from \"moment\";\r\nimport findStartAndEndIndex from \"./findStartAndEndIndex\";\r\n\r\nexport default function filterActivityByDate(\r\n  inData,\r\n  startString,\r\n  endString,\r\n  outputFormat,\r\n  interval\r\n) {\r\n  const { startIndex, endIndex } = findStartAndEndIndex(\r\n    inData,\r\n    startString,\r\n    endString\r\n  );\r\n\r\n  let slicedData = inData.slice(startIndex, endIndex);\r\n  if (slicedData === undefined || slicedData.length === 0) {\r\n    return [];\r\n  }\r\n  let data = slicedData.map(item => ({\r\n    x: moment(item.start, \"YYYY-MM-DDTHH:mm:ss\").format(\"YYYY-MM-DD\"),\r\n    y: item.value\r\n  }));\r\n\r\n  // filters based on date which is the x value and increments for each instance which is the y value.\r\n  let concatenatedData = Object.values(\r\n    data.reduce((c, { x }) => {\r\n      c[x] = c[x] || { x: x, y: 0 };\r\n      c[x].y++;\r\n      return c;\r\n    }, {})\r\n  );\r\n\r\n  if (\r\n    moment().isAfter(\r\n      moment(concatenatedData[concatenatedData.length - 1].x),\r\n      interval\r\n    )\r\n  ) {\r\n    concatenatedData.push({ x: moment().format(\"YYYY-MM-DD\"), y: 0 });\r\n  }\r\n\r\n  let filteredArray = concatenatedData.map(item => ({\r\n    x: moment(item.x, \"YYYY-MM-DD\").format(outputFormat),\r\n    y: item.y\r\n  }));\r\n\r\n  return filteredArray;\r\n}\r\n","import moment from \"moment\";\r\nimport periodFromView from \"./periodFromView\";\r\nimport getStartEndTimes from \"./getStartEndTimes\";\r\nimport aggregateData from \"./aggregateData\";\r\nimport averageData from \"./averageData\";\r\nimport FakeGlucoseData from \"./fakeGlucose\";\r\nimport getFormat from \"./getFormat\";\r\nimport {\r\n  BLOODSUGAR,\r\n  INSULIN,\r\n  STEPS,\r\n  WEIGHT,\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES\r\n} from \"../dataTypes\";\r\nimport fakeCarbData from \"./fakeCarbData\";\r\nimport fakeInsulinData from \"./fakeInsulinData\";\r\nimport sortActivity from \"./sortActivity\";\r\nimport filterActivityByDate from \"./filterActivityByDate\";\r\n\r\nexport const getAggregatedDataForDataType = (\r\n  baseInfo,\r\n  dataSets,\r\n  dataType,\r\n  pageType,\r\n  dateFormat\r\n) => {\r\n  let { periodName, periodNumber, intervalName } = periodFromView(\r\n    baseInfo.view\r\n  );\r\n  let startEndTimes = getStartEndTimes(\r\n    baseInfo.view,\r\n    baseInfo.nrOfIntervalsBack\r\n  );\r\n  let start = startEndTimes.start;\r\n  let end = startEndTimes.end;\r\n\r\n  if (pageType === \"dashboard\") {\r\n    start = moment()\r\n      .startOf(\"day\")\r\n      .subtract(1, \"week\")\r\n      .add(1, \"day\");\r\n    end = moment();\r\n    intervalName = \"day\";\r\n  } else if (pageType === \"prevInnsight\") {\r\n    let { startPrev, endPrev } = getStartEndTimes(\r\n      baseInfo.view,\r\n      parseInt(baseInfo.nrOfIntervalsBack, 10) + 1\r\n    );\r\n    start = startPrev;\r\n    end = endPrev;\r\n  }\r\n  if (\r\n    baseInfo.view === \"custom\" &&\r\n    baseInfo.start !== \"\" &&\r\n    baseInfo.end !== \"\"\r\n  ) {\r\n    start = baseInfo.start;\r\n    end = baseInfo.end;\r\n  }\r\n  function getData() {\r\n    switch (dataType) {\r\n      case STEPS:\r\n        return dataSets[0].measurements;\r\n      case WEIGHT:\r\n        return dataSets[1].measurements;\r\n      case PHYSICAL_ACTIVITY:\r\n        let sortedActivity = sortActivity(dataSets[2].measurements);\r\n        return sortedActivity;\r\n      case CARBOHYDRATES:\r\n        return fakeCarbData(start, end);\r\n      case INSULIN:\r\n        return fakeInsulinData(start, end);\r\n      case BLOODSUGAR:\r\n        //if data is missing, generate empty datapoints to present in prototype\r\n        return [];\r\n      default:\r\n        return \"DataType not found\";\r\n    }\r\n  }\r\n  let data = getData();\r\n  if (data.length === 0) {\r\n    data = [\r\n      {\r\n        value: 0,\r\n        start: moment()\r\n          .subtract(periodNumber, periodName)\r\n          .format(\"YYYY-MM-DDTHH:mm:ss\")\r\n      }\r\n    ];\r\n  }\r\n  function getAggregatedData() {\r\n    const format = dateFormat || getFormat(periodName, intervalName);\r\n    switch (dataType) {\r\n      case PHYSICAL_ACTIVITY:\r\n        if (data === undefined || data.length === 0) {\r\n          return [];\r\n        } else {\r\n          let filteredActivityByDate = filterActivityByDate(\r\n            data,\r\n            start,\r\n            end,\r\n            format,\r\n            intervalName\r\n          );\r\n          return filteredActivityByDate.length > 0\r\n            ? filterActivityByDate(data, start, end, format, intervalName)\r\n            : aggregateData(data, intervalName, start, end, format);\r\n        }\r\n      case BLOODSUGAR:\r\n      case INSULIN:\r\n      case STEPS:\r\n      case CARBOHYDRATES:\r\n        return aggregateData(data, intervalName, start, end, format);\r\n      case WEIGHT:\r\n        return averageData(data, intervalName, start, end, format);\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  const fakeDataForDataType = {\r\n    [BLOODSUGAR]: FakeGlucoseData().map(data => data.value),\r\n    [INSULIN]: [25, 22, 30, 32, 28, 25, 33, 35, 28],\r\n    [WEIGHT]: [72, 72, 72, 69, 69, 68, 70, 72, 72, 72, 69, 69, 68, 70],\r\n    [PHYSICAL_ACTIVITY]: [40, 84, 32, 45, 18, 71, 55, 65, 36],\r\n    [CARBOHYDRATES]: [250, 260, 220, 270, 300, 230, 150, 180],\r\n    [STEPS]: [5000, 3600, 4200, 6700, 7000, 4600, 3000, 2200]\r\n  };\r\n\r\n  let aggregated = getAggregatedData();\r\n  const noRecentData = aggregated.filter(data => data.y > 0).length === 0;\r\n  //Fake data to present in prototype\r\n  if (noRecentData) {\r\n    const fakeData = fakeDataForDataType[dataType];\r\n    aggregated = aggregated.map((data, index) => ({\r\n      x: data.x,\r\n      y: Math.floor(fakeData[index % fakeData.length])\r\n    }));\r\n  }\r\n  return aggregated;\r\n};\r\n","export default function sortActivity(inData) {\r\n  let sleepArray = [];\r\n  let activityArray = [];\r\n  let notActiveArray = [];\r\n  let walkingArray = [];\r\n  let notClassifiedArray = [];\r\n\r\n  for (let i = 0; i < inData.length; i++) {\r\n    let googleType = inData[i].value;\r\n    if (\r\n      googleType === 0 || // In vehicle\r\n      googleType === 3 || // Still (not moving)\r\n      googleType === 4 || // Unknown (unable to detect activity)\r\n      googleType === 5 // Tilting (sudden device gravity change)\r\n    ) {\r\n      notActiveArray.push(inData[i]);\r\n    } else if (\r\n      googleType === 72 || // Sleeping\r\n      googleType === 109 || // Light sleep\r\n      googleType === 110 || // Deep sleep\r\n      googleType === 111 || // REM sleep\r\n      googleType === 112 // Awake (during sleep cycle)\r\n    ) {\r\n      sleepArray.push(inData[i]);\r\n    } else if (\r\n      googleType === 2 || // On foot\r\n      googleType === 7 // Walking\r\n    ) {\r\n      walkingArray.push(inData[i]);\r\n    } else if (\r\n      googleType === 1 || // Biking\r\n      googleType === 8 || // Running\r\n      googleType === 16 || // Road biking\r\n      googleType === 17 || // Spinning\r\n      googleType === 18 || // Stationary biking\r\n      googleType === 19 || // Utility biking\r\n      googleType === 39 || // Jumping rope\r\n      googleType === 54 || // Rowing machine\r\n      googleType === 56 || // Jogging\r\n      googleType === 57 || // Running on sand\r\n      googleType === 58 || // Running (treadmill)\r\n      googleType === 77 || // Stair climbing\r\n      googleType === 78 || // Stair-climbing machine\r\n      googleType === 80 || // Strength training\r\n      googleType === 88 || // Treadmill (walking or running)\r\n      googleType === 93 || // Walking (fitness)\r\n      googleType === 94 || // Nording walking\r\n      googleType === 95 || // Walking (treadmill)\r\n      googleType === 97 || // Weightlifting\r\n      googleType === 98 || // Wheelchair\r\n      googleType === 100 || // Yoga\r\n      googleType === 114 || // HIIT\r\n      googleType === 115 || // Interval Training\r\n      googleType === 116 // Walking (stroller)\r\n    ) {\r\n      activityArray.push(inData[i]);\r\n    } else {\r\n      notClassifiedArray.push(inData[i]);\r\n    }\r\n  }\r\n\r\n  return activityArray;\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport default function fakeCarbData(startString, endString) {\r\n  let start;\r\n  let end;\r\n  let value;\r\n  let data = [];\r\n  const percentage = 0.18;\r\n  let prefix = 0;\r\n  const mean = 70;\r\n  const range = 3;\r\n  let dataLength =\r\n    moment(endString, \"YYYY-MM-DDTHH:mm:ss\").diff(\r\n      moment(startString, \"YYYY-MM-DDTHH:mm:ss\"),\r\n      \"hours\"\r\n    ) + 1;\r\n\r\n  for (let i = 0; i < dataLength; i++) {\r\n    if (Math.random() < 0.5) {\r\n      prefix = -1;\r\n    } else {\r\n      prefix = 1;\r\n    }\r\n    start = moment(startString, \"YYYY-MM-DDTHH:mm:ss\")\r\n      .add(i, \"hours\")\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    end = moment(startString)\r\n      .add(i + 1, \"hours\")\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    if (Math.random() < percentage) {\r\n      value = Math.ceil(mean + prefix * Math.random() * range * 0.5);\r\n    } else {\r\n      value = 0;\r\n    }\r\n\r\n    data.push({ start: start, end: end, value: value });\r\n  }\r\n  return data;\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport default function fakeInsulinData(startString, endString) {\r\n  let start;\r\n  let end;\r\n  let value;\r\n  let data = [];\r\n  const percentage = 0.25;\r\n  let prefix = 0;\r\n  const mean = 6;\r\n  const range = 2;\r\n  let dataLength =\r\n    moment(endString, \"YYYY-MM-DDTHH:mm:ss\").diff(\r\n      moment(startString, \"YYYY-MM-DDTHH:mm:ss\"),\r\n      \"hours\"\r\n    ) + 1;\r\n\r\n  for (let i = 0; i < dataLength; i++) {\r\n    if (Math.random() < 0.5) {\r\n      prefix = -1;\r\n    } else {\r\n      prefix = 1;\r\n    }\r\n    start = moment(startString, \"YYYY-MM-DDTHH:mm:ss\")\r\n      .add(i, \"hours\")\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    end = moment(startString)\r\n      .add(i + 1, \"hours\")\r\n      .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n    if (Math.random() < percentage) {\r\n      value = Math.ceil(mean + prefix * Math.random() * range * 0.5);\r\n    } else {\r\n      value = 0;\r\n    }\r\n\r\n    data.push({ start: start, end: end, value: value });\r\n  }\r\n  return data;\r\n}\r\n","import moment from \"moment\";\r\nimport findStartAndEndIndex from \"./findStartAndEndIndex\";\r\n\r\nexport default function averageDataFunctions(\r\n  inData,\r\n  interval,\r\n  startString,\r\n  endString,\r\n  outputFormat\r\n) {\r\n  const { startIndex, endIndex } = findStartAndEndIndex(\r\n    inData,\r\n    startString,\r\n    endString\r\n  );\r\n  let slicedData;\r\n  let added = 0;\r\n  let start;\r\n  let sum;\r\n  let currentDataTime;\r\n  let time;\r\n  const inputFormat = \"YYYY-MM-DDTHH:mm:ss\";\r\n  const startTime = moment(startString, inputFormat);\r\n  const endTime = moment(endString, inputFormat);\r\n  let aggregated = [];\r\n\r\n  if (endIndex > 0) {\r\n    slicedData = inData.slice(startIndex, endIndex + 1);\r\n  } else {\r\n    slicedData = [];\r\n  }\r\n\r\n  let data = slicedData.map(item => ({ x: item.start, y: item.value }));\r\n  const slicedLength = slicedData.length;\r\n\r\n  if (data === undefined || data.length === 0) {\r\n    data.push({ y: null, x: startTime.format(inputFormat) });\r\n  }\r\n  start = moment(data[0].x, inputFormat).startOf(interval);\r\n  sum = data[0].y;\r\n\r\n  //add null if dates are before the first measurements\r\n  //add the last measurement data before start time of the date period\r\n  if (moment(endTime).isBefore(inData[0].start)) {\r\n    while (moment(start).diff(startTime, interval + \"s\") - added > 0) {\r\n      time = moment(startTime)\r\n        .add(added, interval + \"s\")\r\n        .format(outputFormat);\r\n      aggregated.push({\r\n        y: null,\r\n        x: time\r\n      });\r\n      added++;\r\n    }\r\n  } else if (moment(startTime).isBefore(moment(inData[0].start), \"day\")) {\r\n    while (moment(start).diff(startTime, interval + \"s\") - added > -1) {\r\n      time = moment(startTime)\r\n        .add(added, interval + \"s\")\r\n        .format(outputFormat);\r\n      aggregated.push({\r\n        y: null,\r\n        x: time\r\n      });\r\n      added++;\r\n    }\r\n  } else if (slicedData.length === 0) {\r\n    while (moment(start).diff(endTime, interval + \"s\") + added < 1) {\r\n      time = moment(startTime)\r\n        .add(added, interval + \"s\")\r\n        .format(outputFormat);\r\n      aggregated.push({\r\n        y: inData[startIndex].value,\r\n        x: time\r\n      });\r\n      added++;\r\n    }\r\n  }\r\n\r\n  //average data for each interval if there are more measurements in each interval\r\n  let counter = 1;\r\n  for (let i = 1; i < slicedLength; i++) {\r\n    currentDataTime = moment(data[i].x, inputFormat);\r\n    if (\r\n      moment(start).diff(currentDataTime.startOf(interval), interval + \"s\") ===\r\n      0\r\n    ) {\r\n      counter += 1;\r\n      sum = sum * ((counter - 1) / counter) + data[i].y / counter;\r\n    } else {\r\n      //Add same value inbetween if needed\r\n      let skipped = 0;\r\n      aggregated.push({\r\n        y: sum,\r\n        x: start.format(outputFormat)\r\n      });\r\n      counter = 1;\r\n      while (\r\n        moment(start).diff(currentDataTime, interval + \"s\") + skipped <\r\n        -1\r\n      ) {\r\n        aggregated.push({\r\n          y: sum,\r\n          x: moment(start)\r\n            .add(1 + skipped, interval + \"s\")\r\n            .startOf(interval)\r\n            .format(outputFormat)\r\n        });\r\n        skipped++;\r\n      }\r\n      sum = data[i].y;\r\n      start = currentDataTime.startOf(interval);\r\n    }\r\n  }\r\n\r\n  //add values at end of period\r\n  if (sum !== null) {\r\n    aggregated.push({ y: sum, x: start.format(outputFormat) });\r\n  }\r\n  if (moment(endTime).diff(startTime, interval) > aggregated.length - 1) {\r\n    while (\r\n      moment(endTime).diff(start.add(1, interval + \"s\"), interval + \"s\") > 0\r\n    ) {\r\n      aggregated.push({ y: sum, x: start.format(outputFormat) });\r\n    }\r\n    if (\r\n      moment(endTime).diff(start.add(1, interval + \"s\"), interval + \"s\") > -1\r\n    ) {\r\n      aggregated.push({\r\n        y: sum,\r\n        x: start.subtract(1, interval + \"s\").format(outputFormat)\r\n      });\r\n    }\r\n  }\r\n\r\n  return aggregated;\r\n}\r\n","import {\r\n  WEIGHT,\r\n  BLOODSUGAR,\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES,\r\n  chartDataByDataType,\r\n  getDomain,\r\n  getGoal,\r\n  INSULIN,\r\n  STEPS\r\n} from \"../../../dataTypes\";\r\nimport React from \"react\";\r\nimport {\r\n  YAxis,\r\n  XAxis,\r\n  Bar,\r\n  BarChart,\r\n  LineChart,\r\n  Line,\r\n  ResponsiveContainer,\r\n  ReferenceLine\r\n} from \"recharts\";\r\n\r\nconst DashboardGraph = ({ aggregatedData, dataType, patient }) => {\r\n  const chartData = chartDataByDataType[dataType];\r\n  const chartWidth = 400;\r\n  const chartHeight = 96;\r\n  const chartMargin = { top: 10, right: 50, bottom: 0, left: 0 };\r\n  const barColor = \"rgba(89, 195, 255, 0.8)\";\r\n  const yAxis = <YAxis domain={getDomain(dataType, aggregatedData)} hide />;\r\n  const xAxis = <XAxis height={2} dataKey=\"x\" tick={false} />;\r\n  const goal = getGoal(patient, dataType);\r\n  const goalLabel =\r\n    dataType !== STEPS ? goal.value + \" \" + goal.unit : goal.value;\r\n  const refValue = helpLines[dataType];\r\n  const refLabel = dataType !== STEPS ? refValue + \" \" + goal.unit : refValue;\r\n  const goalLine = (\r\n    <ReferenceLine\r\n      y={goal.value}\r\n      stroke=\"#007544\"\r\n      strokeDasharray=\"3 3\"\r\n      label={{\r\n        value: goalLabel,\r\n        position: \"right\",\r\n        fill: \"#007544\"\r\n      }}\r\n    />\r\n  );\r\n  const refLine = (\r\n    <ReferenceLine\r\n      y={refValue}\r\n      stroke=\"#999999\"\r\n      label={{\r\n        value: refLabel,\r\n        position: \"right\",\r\n        fill: \"#999999\"\r\n      }}\r\n    />\r\n  );\r\n\r\n  if (chartData.chartType === \"bar\") {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <BarChart\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            data={aggregatedData}\r\n            margin={chartMargin}\r\n          >\r\n            {yAxis}\r\n            {xAxis}\r\n            {refLine}\r\n            <Bar dataKey=\"y\" fill={barColor} />\r\n            {goalLine}\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  } else if (chartData.chartType === \"line\") {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <LineChart\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            data={aggregatedData}\r\n            margin={chartMargin}\r\n          >\r\n            {yAxis}\r\n            {xAxis}\r\n            {goalLine}\r\n            {refLine}\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"y\"\r\n              stroke={barColor}\r\n              fill={barColor}\r\n              dot={{ strokeWidth: 2, r: 1 }}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DashboardGraph;\r\n\r\nconst helpLines = {\r\n  [BLOODSUGAR]: 9,\r\n  [INSULIN]: 20,\r\n  [STEPS]: 5000,\r\n  [WEIGHT]: 63,\r\n  [PHYSICAL_ACTIVITY]: 60,\r\n  [CARBOHYDRATES]: 200\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ChevronRightRounded from \"@helsenorge/toolkit/components/icons/ChevronRightRounded\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport \"./dashboardContent.css\";\r\nimport { Link } from \"react-router-dom\";\r\n// import FakeGlucoseData from \"../../Utils/fakeGlucose\";\r\n// import Trends from \"../../Utils/trends\";\r\n// import getStartEndTimes from \"../../Utils/getStartEndTimes\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./bloodSugarContent.css\";\r\nimport { Line } from \"rc-progress\";\r\n// import aggregateData from \"../../Utils/aggregateData\";\r\nimport { BLOODSUGAR } from \"../../../dataTypes\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\nimport DashboardGraph from \"./dashboardGraph\";\r\n\r\nclass BloodSugarContent extends Component {\r\n  render() {\r\n    const aggregatedData = getAggregatedDataForDataType(\r\n      this.props.baseInfo,\r\n      this.props.patient.datasets,\r\n      BLOODSUGAR,\r\n      \"dashboard\"\r\n    );\r\n    /*\r\n     * All of the following ended up not working right before the deadline\r\n     * but it almost works, so didn't want to throw out.\r\n     */\r\n\r\n    // // Get fake glucosedata and aggregate for this week.\r\n    // let data = FakeGlucoseData();\r\n    // let { start, end } = getStartEndTimes(\"week\", 0);\r\n    // let aggregated = aggregateData(data, \"day\", start, end, \"ddd\");\r\n    // // Get goal limits from redux store.\r\n    // let lowerLimit = this.props.patient.goals.BloodSugarRangeGoal.lower;\r\n    // let upperLimit = this.props.patient.goals.BloodSugarRangeGoal.upper;\r\n    // // Calculate trends for this week.\r\n    // let trends = Trends(data, upperLimit, lowerLimit);\r\n    // let currentValue =\r\n    //   (trends.timeWithin * 100) /\r\n    //   (trends.timeAbove + trends.timeWithin + trends.timeBelow);\r\n    // // Aggregate the fake data for previous week.\r\n    // let { start: startPrev, end: endPrev } = getStartEndTimes(\r\n    //   this.props.baseInfo.view,\r\n    //   parseInt(this.props.baseInfo.nrOfIntervalsBack, 10) + 1\r\n    // );\r\n    // let prevAggregated = aggregateData(data, \"day\", startPrev, endPrev, \"ddd\");\r\n    // // Caclulate trends for previous week.\r\n    // let prevTrends = Trends(prevAggregated, upperLimit, lowerLimit);\r\n    // let prevValue =\r\n    //   prevTrends.timeWithin /\r\n    //   (prevTrends.timeAbove + prevTrends.timeWithin + prevTrends.timeBelow);\r\n    // // Calculate the two changes in trends.\r\n    // let percentageChange = currentValue - prevValue;\r\n    // let meanChange = trends.mean - prevTrends.mean;\r\n    // // Get arrow imgs for use with trend values.\r\n    const upTrianglePic = require(\"../../../Images/greenUpTriangle.svg\");\r\n    const downTrianglePic = require(\"../../../Images/greenDownTriangle.svg\");\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main\">\r\n          <div className=\"left\">\r\n            <div className=\"average-div\">\r\n              <div className=\"average-left caption\">Gj.snittlig:</div>\r\n              <div className=\"average-right caption\">\r\n                {10} mmol/l\r\n                {/* {Math.floor(trends.mean)} mmol/l */}\r\n              </div>\r\n            </div>\r\n            <DashboardGraph\r\n              aggregatedData={aggregatedData}\r\n              dataType={BLOODSUGAR}\r\n              patient={this.props.patient}\r\n            />\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"caption\">\r\n              <div style={{ color: \"black\" }}>Tid innenfor grenseverdien:</div>\r\n              <div>\r\n                <div className=\"large-numerical-value time-within\">\r\n                  {74} %{/* {Math.floor(currentValue)} % */}\r\n                </div>{\" \"}\r\n                <Line\r\n                  strokeWidth=\"5\"\r\n                  strokeColor=\"#85c99e\"\r\n                  // percent={currentValue}\r\n                  percent={74}\r\n                  trailWidth=\"5\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"trend-div\">\r\n          <div className=\"left-trend\">\r\n            <img\r\n              // src={meanChange > 0 ? upTrianglePic : downTrianglePic}\r\n              src={downTrianglePic}\r\n              alt={\"logo\"}\r\n              className=\"trend-triangle\"\r\n            />\r\n            <div>\r\n              {/* {Math.floor(meanChange)} mmol/l */}\r\n              -1 mmol/l\r\n            </div>\r\n          </div>\r\n          <div className=\"right-trend\">\r\n            <img\r\n              // src={percentageChange > 0 ? upTrianglePic : downTrianglePic}\r\n              src={upTrianglePic}\r\n              alt={\"logo\"}\r\n              className=\"trend-triangle\"\r\n            />\r\n            <div>2 %{/* {Math.floor(percentageChange)} % */}</div>\r\n          </div>\r\n          <div className=\"button-style\">\r\n            <Link to={\"/bloodsugar\"} style={{ borderBottom: \"none\" }}>\r\n              <DisplayButton secondary>\r\n                <div className=\"flex-container-button\">\r\n                  <div className=\"flex-children-button\">Utforsk</div>\r\n                  <ChevronRightRounded className=\"flex-children-button-icon chevronStyle\" />\r\n                </div>\r\n              </DisplayButton>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BloodSugarContent);\r\n","import React, { Component } from \"react\";\r\nimport { InlineButton } from \"@helsenorge/toolkit/components/atoms/buttons/inline-button\";\r\n\r\nclass AddDataContent extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"visnings-div\">\r\n        <InlineButton type={\"add\"}> Legg til ny datakilde</InlineButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddDataContent;\r\n","import React from \"react\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst changeGoalsContent = () => {\r\n  return (\r\n    <div>\r\n      <div style={{ color: \"black\" }}>\r\n        Om du har behov for å justere målene dine kan du endre på dem.\r\n      </div>\r\n      <br />\r\n      <div className=\"dashboard-button\">\r\n        <Link to={\"/mygoals\"} style={{ borderBottom: \"none\" }}>\r\n          <DisplayButton secondary>\r\n            <div className={\"dashboard-button-sizing\"}>Gå til Mine mål </div>\r\n          </DisplayButton>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default changeGoalsContent;\r\n","import React from \"react\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./dashboardContent.css\";\r\n\r\nconst compareDataContent = () => {\r\n  return (\r\n    <div>\r\n      <div style={{ color: \"black\" }}>\r\n        Forstå dine resultater bedre ved å sammenligne data.\r\n      </div>\r\n      <br />\r\n      <div className=\"dashboard-button\">\r\n        <Link to={\"/comparedata\"} style={{ borderBottom: \"none\" }}>\r\n          <DisplayButton secondary>\r\n            <div className={\"dashboard-button-sizing\"}>\r\n              Gå til Sammenlign data{\" \"}\r\n            </div>\r\n          </DisplayButton>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default compareDataContent;\r\n","import React, { Component } from \"react\";\r\nimport ChevronRightRounded from \"@helsenorge/toolkit/components/icons/ChevronRightRounded\";\r\nimport \"../../Pages/Dashboard/DashboardContent/dashboardContent.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*\r\n * Button used to link to Insight pages of each dataset from the dashboard.\r\n * Must have a linkTo prop that is the /name_of_desired_insight_page, for\r\n * example \"/bloodsugar\". The used linkTo values are specified in cardInfoByDataType\r\n * found in /Pages/Dashboard/DashboardContent/dashboardGraphCard.js\r\n */\r\n\r\nclass InsightButton extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"flex-end\",\r\n          alignSelf: \"flex-end\"\r\n        }}\r\n      >\r\n        <Link to={this.props.linkTo} style={{ borderBottom: \"none\" }}>\r\n          <button className=\"shape\">\r\n            <ChevronRightRounded className=\"chevronStyle\" />\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsightButton;","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BLOODSUGAR,\r\n  INSULIN,\r\n  STEPS,\r\n  WEIGHT,\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES\r\n} from \"../../../dataTypes\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\nimport DashboardGraph from \"./dashboardGraph\";\r\nimport InsightButton from \"../../../Components/InsightButton/insightButton\";\r\nimport getStaticTrend from \"../../../Utils/getStaticTrend\";\r\n\r\nclass DashboardGraphCard extends Component {\r\n  makeGraph = dataType => {\r\n    const aggregatedData = getAggregatedDataForDataType(\r\n      this.props.baseInfo,\r\n      this.props.patient.datasets,\r\n      dataType,\r\n      \"dashboard\"\r\n    );\r\n    return (\r\n      <DashboardGraph\r\n        aggregatedData={aggregatedData}\r\n        dataType={this.props.dataType}\r\n        patient={this.props.patient}\r\n      />\r\n    );\r\n  };\r\n\r\n  makeContent = link => {\r\n    const trend = getStaticTrend(this.props.dataType);\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: \"12px\" }}>\r\n          {this.makeGraph(this.props.dataType)}\r\n        </div>\r\n        <div className=\"dashboard-card-container\">\r\n          <div className=\"static-trend\">{trend}</div>\r\n          <InsightButton linkTo={link} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { link, title } = cardInfoByDataType[this.props.dataType];\r\n    return <CardComponent title={title} content={this.makeContent(link)} />;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardGraphCard);\r\nconst cardInfoByDataType = {\r\n  [BLOODSUGAR]: {\r\n    link: \"/bloodsugar\",\r\n    title: \"Blodsukker\"\r\n  },\r\n  [INSULIN]: { link: \"/insulin\", title: \"Insulin\" },\r\n  [STEPS]: {\r\n    link: \"/steps\",\r\n    title: \"Skritt\"\r\n  },\r\n  [WEIGHT]: {\r\n    link: \"/weight\",\r\n    title: \"Vekt\"\r\n  },\r\n  [PHYSICAL_ACTIVITY]: {\r\n    link: \"/physicalActivity\",\r\n    title: \"Fysisk aktivitet\"\r\n  },\r\n  [CARBOHYDRATES]: {\r\n    link: \"/carbohydrates\",\r\n    title: \"Karbohydrater\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES,\r\n  INSULIN,\r\n  STEPS,\r\n  WEIGHT\r\n} from \"../dataTypes\";\r\nimport \"../Pages/Dashboard/dashboard.css\";\r\n\r\nexport default function getStaticTrend(dataType) {\r\n  let text;\r\n  let pic;\r\n  switch (dataType) {\r\n    case INSULIN:\r\n      pic = require(\"../Images/dashBlueUpArrow.svg\");\r\n      text = \" +6 U\";\r\n      break;\r\n    case STEPS:\r\n      pic = require(\"../Images/dashOrangeDownArrow.svg\");\r\n      text = \" -540 skritt\";\r\n      break;\r\n    case WEIGHT:\r\n      pic = require(\"../Images/dashGreenDownArrow.svg\");\r\n      text = \" -4 kg\";\r\n      break;\r\n    case CARBOHYDRATES:\r\n      pic = require(\"../Images/dashGreenDownArrow.svg\");\r\n      text = \" -7 g\";\r\n      break;\r\n    case PHYSICAL_ACTIVITY:\r\n      pic = require(\"../Images/dashGreenUpArrow.svg\");\r\n      text = \" +6 min\";\r\n      break;\r\n    default:\r\n      return \"\";\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <img src={pic} alt={\"logo\"} className=\"dash-trend-image\" />\r\n      <span className=\"dash-trend-text\">{text}</span>\r\n    </span>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./dashboard.css\";\r\nimport FHIRConnection from \"../../FHIRCommunication\";\r\nimport CardComponent from \"../../Components/Card/cardComponent\";\r\nimport BloodSugarContent from \"./DashboardContent/bloodSugarContent\";\r\nimport AddDataContent from \"./DashboardContent/addDataContent\";\r\nimport changeGoalsContent from \"./DashboardContent/changeGoalsContent\";\r\nimport compareDataContent from \"./DashboardContent/compareDataContent\";\r\nimport DashboardGraphCard from \"./DashboardContent/dashboardGraphCard\";\r\nimport {\r\n  INSULIN,\r\n  STEPS,\r\n  WEIGHT,\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES\r\n} from \"../../dataTypes\";\r\n\r\n/*\r\n * The main page of the project, giving a summary of each data source, with links to each data source's\r\n * insight page. Also contains links to the goal page and the compare data page, as well as a currently\r\n * not working link to add more data sources. As with all the pages it has the menu bar at the top for\r\n * easy navigation.\r\n */\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      return (\r\n        <div style={{ margin: \"0 4px 8px\" }}>\r\n          <div className=\"insight-header\">\r\n            <h1 className=\"header-container\">Innsikt</h1>\r\n            <div className=\"status-container\">\r\n              Viser status fra siste 7 dager\r\n            </div>\r\n          </div>\r\n\r\n          <CardComponent title={\"Blodsukker\"} content={<BloodSugarContent />} />\r\n          <div className=\"flex-container\">\r\n            <DashboardGraphCard dataType={INSULIN} />\r\n            <DashboardGraphCard dataType={STEPS} />\r\n          </div>\r\n          <div\r\n            className=\"flex-container\"\r\n            styles={{\r\n              \"margin-left\": \"8px\",\r\n              \"margin-top\": \"8px\",\r\n              \"margin-right\": \"8px\"\r\n            }}\r\n          >\r\n            <DashboardGraphCard dataType={CARBOHYDRATES} />\r\n            <DashboardGraphCard dataType={WEIGHT} />\r\n          </div>\r\n          <div className=\"flex-container\">\r\n            <DashboardGraphCard dataType={PHYSICAL_ACTIVITY} />\r\n            <div className=\"flex-children\" style={{ marginRight: \"8px\" }} />\r\n          </div>\r\n          <div className=\"single-flex-container\">\r\n            <CardComponent content={<AddDataContent />} />\r\n          </div>\r\n          <div className=\"single-flex-container\">\r\n            <CardComponent\r\n              title={\"Sette nye mål?\"}\r\n              content={changeGoalsContent()}\r\n            />\r\n          </div>\r\n          <div className=\"single-flex-container\">\r\n            <CardComponent\r\n              title={\"Forstå din data\"}\r\n              content={compareDataContent()}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navigationBar.css\";\r\n\r\n/*\r\n * Navigation bar used for navigating between the different insight pages.\r\n * Can be scrolled through with arrow buttons or with drag and drop.\r\n * Known bugs: does not remember position when an element is pressed.\r\n */\r\n\r\nclass NavigationBar extends Component {\r\n  scrollRight() {\r\n    var x = document.getElementById(\"tab_list\");\r\n    x.scrollBy({ top: 0, left: 100, behavior: \"smooth\" });\r\n  }\r\n\r\n  scrollLeft() {\r\n    var x = document.getElementById(\"tab_list\");\r\n    x.scrollBy({ top: 0, left: -100, behavior: \"smooth\" });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentPage = window.location.pathname.split('/')[1];\r\n    var x = document.getElementById(\"tab_list\");\r\n    x.scrollBy({ top: 0, left: scrollPositions[currentPage]});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu-button-row row navbar d-block max-width-wrapper\">\r\n        <ul className=\"tab_list\" id=\"tab_list\">\r\n          <li className=\"li-wrapper\">\r\n            <NavLink\r\n              to=\"/bloodsugar\"\r\n              className=\"tab-anchor\"\r\n              activeClassName=\"tab_selected\"\r\n            >\r\n              BLODSUKKER\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"li-wrapper\">\r\n            <NavLink\r\n              to=\"/insulin\"\r\n              className=\"tab-anchor\"\r\n              activeClassName=\"tab_selected\"\r\n            >\r\n              INSULIN\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"li-wrapper\">\r\n            <NavLink\r\n              to=\"/steps\"\r\n              className=\"tab-anchor\"\r\n              activeClassName=\"tab_selected\"\r\n            >\r\n              SKRITT\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"li-wrapper\">\r\n            <NavLink\r\n              to=\"/weight\"\r\n              className=\"tab-anchor\"\r\n              activeClassName=\"tab_selected\"\r\n            >\r\n              VEKT\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"li-wrapper\">\r\n            <NavLink\r\n              to=\"/physicalactivity\"\r\n              className=\"tab-anchor\"\r\n              activeClassName=\"tab_selected\"\r\n            >\r\n              FYSISK AKTIVITET\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"li-wrapper\">\r\n            <NavLink\r\n              to=\"/carbohydrates\"\r\n              className=\"tab-anchor\"\r\n              activeClassName=\"tab_selected\"\r\n            >\r\n              KARBOHYDRATER\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <span className=\"prev\" onClick={() => this.scrollLeft()}>\r\n          &#10094;\r\n        </span>\r\n        <span className=\"next\" onClick={() => this.scrollRight()}>\r\n          &#10095;\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationBar;\r\n\r\nconst scrollPositions = {\r\n  \"bloodsugar\": 0,\r\n  \"insulin\": 0,\r\n  \"steps\": 100,\r\n  \"weight\": 200,\r\n  \"physicalactivity\": 300,\r\n  \"carbohydrates\": 400\r\n}\r\n","function Trends(data, upperLimit, lowerLimit) {\r\n  let sum = 0;\r\n  let timeAbove = 0;\r\n  let timeBelow = 0;\r\n  let timeWithin = 0;\r\n  let mean = 0;\r\n  if (data.length > 0) {\r\n    if (data[0].value) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].value > upperLimit) {\r\n          timeAbove++;\r\n        } else if (data[i].value < lowerLimit) {\r\n          timeBelow++;\r\n        } else {\r\n          timeWithin++;\r\n        }\r\n        sum += data[i].value;\r\n      }\r\n    } else {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].y > upperLimit) {\r\n          timeAbove++;\r\n        } else if (data[i].y < lowerLimit) {\r\n          timeBelow++;\r\n        } else {\r\n          timeWithin++;\r\n        }\r\n        sum += data[i].y;\r\n      }\r\n    }\r\n    mean = sum / data.length;\r\n  }\r\n  return { timeAbove, timeBelow, timeWithin, mean, sum };\r\n}\r\n\r\nexport default Trends;\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport FakeGlucoseData from \"../../../Utils/fakeGlucose\";\r\nimport Trends from \"../../../Utils/trends\";\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\";\r\nimport \"./trendGoalsCard.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  INSULIN,\r\n  STEPS,\r\n  WEIGHT,\r\n  CARBOHYDRATES,\r\n  PHYSICAL_ACTIVITY\r\n} from \"../../../dataTypes\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\n\r\n/*\r\n * Calculates trends and renders the trend card. Most of the calculations is figuring out the\r\n * look of the goal speedometer.\r\n */\r\n\r\nclass TrendGoalsCard extends Component {\r\n  displayUnit = () => {\r\n    switch (this.props.datatype) {\r\n      case \"Blodsukker\":\r\n        return \"\";\r\n      case \"Insulin\":\r\n        return \"\";\r\n      case \"Skritt\":\r\n        return \"skritt/dag\";\r\n      case \"Vekt\":\r\n        return \"\";\r\n      case \"FysiskAktivitet\":\r\n        return \"\";\r\n      case \"Karbohydrater\":\r\n        return \"\";\r\n      default:\r\n        return \"Default\";\r\n    }\r\n  };\r\n\r\n  trendGoalsContent = () => {\r\n    // Getting the data, goals and such needed for each use case. Also calculates trends.\r\n\r\n    let data = FakeGlucoseData();\r\n    let aggregated;\r\n    let upperLimit = 12;\r\n    let lowerLimit = 5;\r\n    let trendValue = 2;\r\n    let goalValue = 75;\r\n    let { mean, timeAbove, timeWithin, timeBelow } = Trends(\r\n      data,\r\n      upperLimit,\r\n      lowerLimit\r\n    );\r\n    let currentValue =\r\n      (timeWithin * 100) / (timeAbove + timeWithin + timeBelow);\r\n    let unit = \"%\";\r\n    let unitMiddle = \"%\";\r\n    let trends;\r\n    let hasUpperLimit = true;\r\n    let upperGoal = 80;\r\n    let lowerGoal = 70;\r\n    let pieSideSize = 20;\r\n    let lowerIsBetter = false;\r\n    switch (this.props.datatype) {\r\n      case \"Blodsukker\":\r\n        data = FakeGlucoseData();\r\n        trendValue = 2;\r\n        goalValue = this.props.patient.goals.BloodSugarWithinRangePercentageGoal\r\n          .value;\r\n        lowerLimit = this.props.patient.goals.BloodSugarRangeGoal.lower;\r\n        upperLimit = this.props.patient.goals.BloodSugarRangeGoal.upper;\r\n        trends = Trends(data, upperLimit, lowerLimit);\r\n        mean = trends.mean;\r\n        timeAbove = trends.timeAbove;\r\n        timeWithin = trends.timeWithin;\r\n        timeBelow = trends.timeBelow;\r\n        currentValue =\r\n          (timeWithin * 100) / (timeAbove + timeWithin + timeBelow);\r\n        unit = \"%\";\r\n        hasUpperLimit = false;\r\n        break;\r\n      case \"Insulin\":\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          INSULIN,\r\n          \"trend\"\r\n        );\r\n        upperLimit = 20;\r\n        lowerLimit = 5;\r\n        trendValue = 2;\r\n        goalValue = 75;\r\n        trends = Trends(data, upperLimit, lowerLimit);\r\n        mean = trends.mean;\r\n        timeAbove = trends.timeAbove;\r\n        timeWithin = trends.timeWithin;\r\n        timeBelow = trends.timeBelow;\r\n        currentValue =\r\n          ((timeAbove + timeWithin - timeBelow) * 100) /\r\n          (timeAbove + timeWithin + timeBelow);\r\n        unit = \"%\";\r\n        upperGoal = 90;\r\n        lowerGoal = 70;\r\n        break;\r\n      case \"Skritt\":\r\n        hasUpperLimit = false;\r\n        aggregated = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          STEPS,\r\n          \"trend\"\r\n        );\r\n        upperLimit = 10000000;\r\n        lowerLimit = 15000;\r\n        goalValue = this.props.patient.goals.StepsGoal.value;\r\n        trendValue = 200;\r\n        trends = Trends(aggregated, upperLimit, lowerLimit);\r\n        let prevAggregated = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          STEPS,\r\n          \"prevInnsight\"\r\n        );\r\n        let prevTrends = Trends(prevAggregated, upperLimit, lowerLimit);\r\n        mean = trends.mean;\r\n        timeAbove = trends.timeAbove;\r\n        timeWithin = trends.timeWithin;\r\n        timeBelow = trends.timeBelow;\r\n        currentValue = mean;\r\n        trendValue = mean - prevTrends.mean;\r\n        unit = \"\";\r\n        unitMiddle = \"skritt\";\r\n        pieSideSize = Math.floor(Math.abs(goalValue - currentValue + 1000) / 1000) * 1000;\r\n        break;\r\n      case \"Vekt\":\r\n        unit = \" kg\";\r\n        unitMiddle = \"kg\";\r\n        pieSideSize = 20;\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          WEIGHT,\r\n          \"trend\"\r\n        );\r\n        goalValue = this.props.patient.goals.WeightGoal.value;\r\n        hasUpperLimit = false;\r\n        lowerIsBetter = true;\r\n        currentValue = 0;\r\n        data.forEach(e => currentValue = currentValue + e.y);\r\n        currentValue = currentValue / data.length;\r\n        break;\r\n      case \"Karbohydrater\":\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          CARBOHYDRATES,\r\n          \"trend\"\r\n        );\r\n        unitMiddle = \"g\";\r\n        goalValue = this.props.patient.goals.CarbsGoal.value;\r\n        unit = \" g\";\r\n        hasUpperLimit = false;\r\n        lowerIsBetter = true;\r\n        currentValue = 0;\r\n        data.forEach(e => currentValue = currentValue + e.y);\r\n        currentValue = currentValue / data.length;\r\n        pieSideSize = (Math.floor(Math.abs(goalValue - currentValue + 100) / 100) * 100);\r\n        break;\r\n      case \"FysiskAktivitet\":\r\n        unitMiddle = \"min\";\r\n        unit = \" min\";\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          PHYSICAL_ACTIVITY,\r\n          \"trend\"\r\n        );\r\n        goalValue = this.props.patient.goals.PhysicalActivityGoal.value;\r\n        hasUpperLimit = false;\r\n        currentValue = 0;\r\n        data.forEach(e => currentValue = currentValue + e.y);\r\n        currentValue = currentValue / (data.length / 7);\r\n        pieSideSize = Math.floor(Math.abs(goalValue - currentValue + 100) / 100) * 100;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    pieSideSize = pieSideSize || 20;\r\n\r\n    // Deciding which colors to use.\r\n\r\n    let COLORS = [\"#A61E7B\", \"#569B7E\", \"#E38B21\"];\r\n    if (!hasUpperLimit) {\r\n      COLORS = [\"#569B7E\", \"#E38B21\"];\r\n    }\r\n    if (lowerIsBetter) {\r\n      COLORS = [\"#E38B21\", \"#569B7E\"];\r\n    }\r\n\r\n    const goalArrowPic = require(\"../../../Images/goalArrow.svg\");\r\n    const upTrianglePic = require(\"../../../Images/greenUpTriangle.svg\");\r\n    const downTrianglePic = require(\"../../../Images/yellowDownTriangle.svg\");\r\n    let angles = [];\r\n    let pieData;\r\n    let lowerTextValue;\r\n    let upperTextValue;\r\n    let lowerText;\r\n    let upperText;\r\n    let goalText;\r\n\r\n    // Calculating limits, and where to put arrows and labels.\r\n    if (hasUpperLimit) {\r\n      if (unit === \"%\") {\r\n        pieData = [\r\n          { value: Math.min(pieSideSize, 100 - upperGoal) },\r\n          { value: upperGoal - lowerGoal },\r\n          { value: Math.min(pieSideSize, lowerGoal) }\r\n        ];\r\n        lowerTextValue = Math.max(0, lowerGoal - pieSideSize);\r\n        upperTextValue = Math.min(100, upperGoal + pieSideSize);\r\n        goalText = lowerGoal + unit + \" - \" + upperGoal + unit;\r\n      } else {\r\n        pieData = [\r\n          { value: pieSideSize },\r\n          { value: upperGoal - lowerGoal },\r\n          {\r\n            value: Math.min(\r\n              currentValue - pieSideSize,\r\n              lowerGoal - pieSideSize\r\n            ),\r\n            name: \"Time Below\"\r\n          }\r\n        ];\r\n      }\r\n      angles = [\r\n        ((-30 +\r\n          (pieData[0].value /\r\n            (pieData[0].value + pieData[1].value + pieData[2].value)) *\r\n            240) *\r\n          Math.PI) /\r\n          180,\r\n        ((-30 +\r\n          ((pieData[0].value + pieData[1].value) /\r\n            (pieData[0].value + pieData[1].value + pieData[2].value)) *\r\n            240) *\r\n          Math.PI) /\r\n          180,\r\n        0\r\n      ];\r\n    } else {\r\n      // only lower limit\r\n      if (unit === \"%\") {\r\n        pieData = [\r\n          { value: Math.min(pieSideSize, 100 - goalValue) },\r\n          { value: Math.min(pieSideSize, goalValue) }\r\n        ];\r\n        lowerTextValue = Math.max(0, goalValue - pieSideSize);\r\n        upperTextValue = Math.min(100, goalValue + pieSideSize);\r\n        goalText = goalValue + unit;\r\n      } else {\r\n        pieData = [{ value: pieSideSize }, { value: pieSideSize }];\r\n        lowerTextValue = Math.max(0, goalValue - pieSideSize);\r\n        upperTextValue = parseInt(goalValue) + parseInt(pieSideSize);\r\n      }\r\n      angles = [\r\n        0,\r\n        ((-30 +\r\n          (pieData[0].value / (pieData[0].value + pieData[1].value)) * 240) *\r\n          Math.PI) /\r\n          180,\r\n        0\r\n      ];\r\n\r\n      goalText = goalValue + \" \" + unit;\r\n    }\r\n    lowerText = lowerTextValue + unit;\r\n    upperText = upperTextValue + unit;\r\n\r\n    let arrowAngle;\r\n    let arrowOutsideRangeSpacing = 5;\r\n\r\n    if (currentValue < lowerTextValue) {\r\n      arrowAngle = ((210 + arrowOutsideRangeSpacing) * Math.PI) / 180;\r\n    } else if (currentValue > upperTextValue) {\r\n      arrowAngle = ((-30 - arrowOutsideRangeSpacing) * Math.PI) / 180;\r\n    } else {\r\n      arrowAngle =\r\n        ((-30 +\r\n          ((upperTextValue - currentValue) /\r\n            (upperTextValue - lowerTextValue)) *\r\n            240) *\r\n          Math.PI) /\r\n        180;\r\n    }\r\n\r\n    // Calculating positions of the vertices of the polygon making up the triangle.\r\n\r\n    let triangleAngle = (70 * Math.PI) / 180;\r\n    let r = 20;\r\n    let theta = 9;\r\n    let radius = 60;\r\n\r\n    let centerX = 125 + radius * Math.cos(-arrowAngle);\r\n    let centerY = 110 + radius * Math.sin(-arrowAngle);\r\n    let x1 = Math.floor(centerX + r * Math.cos(-arrowAngle));\r\n    let y1 = Math.floor(centerY + r * Math.sin(-arrowAngle));\r\n    let x2 = Math.floor(\r\n      centerX + theta * Math.cos(-arrowAngle - triangleAngle)\r\n    );\r\n    let y2 = Math.floor(\r\n      centerY + theta * Math.sin(-arrowAngle - triangleAngle)\r\n    );\r\n    let x3 = Math.floor(\r\n      centerX + theta * Math.cos(-arrowAngle + triangleAngle)\r\n    );\r\n    let y3 = Math.floor(\r\n      centerY + theta * Math.sin(-arrowAngle + triangleAngle)\r\n    );\r\n\r\n    let pointString = x1 + \" \" + y1 + \" \" + x2 + \" \" + y2 + \" \" + x3 + \" \" + y3;\r\n\r\n    return (\r\n      <div className=\"flex-container-trend-goals outer-div-trend-goals\">\r\n        <ResponsiveContainer\r\n          className=\"flex-children-trend-goals\"\r\n          width={250}\r\n          height={220}\r\n        >\r\n          <PieChart width={1000} height={600}>\r\n            <Pie\r\n              data={pieData}\r\n              dataKey=\"value\"\r\n              nameKey=\"name\"\r\n              startAngle={-30}\r\n              endAngle={+210}\r\n              innerRadius={75}\r\n              outerRadius={90}\r\n              fill=\"#979797\"\r\n              label={({ cx, cy, index }) => {\r\n                let returnString = \"\";\r\n                if (index === 0) {\r\n                  if (hasUpperLimit) {\r\n                    returnString = upperGoal + unit;\r\n                  } else {\r\n                    returnString = \"\";\r\n                  }\r\n                } else if (index === 1) {\r\n                  if (hasUpperLimit) {\r\n                    returnString = lowerGoal + unit;\r\n                  } else {\r\n                    returnString = goalValue + unit;\r\n                  }\r\n                } else {\r\n                  returnString = \"\";\r\n                }\r\n                return (\r\n                  <React.Fragment>\r\n                    <text\r\n                      x={cx + 95 * Math.cos(-angles[index])}\r\n                      y={cy + 95 * Math.sin(-angles[index])}\r\n                      fill=\"#569B7E\"\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"end\"\r\n                      className=\"caption\"\r\n                    >\r\n                      {returnString}\r\n                    </text>\r\n                    <text\r\n                      x={cx + 110 * Math.cos((-210 * Math.PI) / 180)}\r\n                      y={cy + 110 * Math.sin((-210 * Math.PI) / 180)}\r\n                      fill=\"#7D8081\"\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"end\"\r\n                      className=\"caption\"\r\n                    >\r\n                      {lowerText}\r\n                    </text>\r\n                    <text\r\n                      x={cx + 110 * Math.cos((30 * Math.PI) / 180)}\r\n                      y={cy + 110 * Math.sin((30 * Math.PI) / 180)}\r\n                      fill=\"#7D8081\"\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"end\"\r\n                      className=\"caption\"\r\n                    >\r\n                      {upperText}\r\n                    </text>\r\n                    <text\r\n                      x={cx}\r\n                      y={cy + 15}\r\n                      fill=\"#000000\"\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"end\"\r\n                      className=\"caption\" // \"distance-to-goal-text\"\r\n                    >\r\n                      {goalValue - Math.floor(currentValue) > 0\r\n                        ? Math.abs(goalValue - Math.floor(currentValue)) +\r\n                          \" \" +\r\n                          unitMiddle +\r\n                          \" under målet\"\r\n                        : Math.abs(goalValue - Math.floor(currentValue)) +\r\n                          \" \" +\r\n                          unitMiddle +\r\n                          \" over målet\"}\r\n                    </text>\r\n                    <text\r\n                      x={cx}\r\n                      y={cy - 5}\r\n                      fill=\"#000000\"\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"end\"\r\n                      className=\"large-numerical-value\"\r\n                    >\r\n                      {Math.floor(currentValue) + unit}\r\n                    </text>\r\n                  </React.Fragment>\r\n                );\r\n              }}\r\n              labelLine={false}\r\n            >\r\n              {data.map((entry, index) => (\r\n                <Cell key=\"\" fill={COLORS[index % COLORS.length]} />\r\n              ))}{\" \"}\r\n              />{\" \"}\r\n            </Pie>\r\n            <svg>\r\n              <polygon\r\n                points={pointString}\r\n                fill=\"#4F4F4F\"\r\n                className=\"trend-polygon\"\r\n              />{\" \"}\r\n            </svg>\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n        <div className=\"flex-children-trend-goals flex-side-container-trend-goals\">\r\n          <div className=\"flex-parent-upper-right upper-trend-goals-div\">\r\n            <div className=\"flex-children-trend-goals flex-container-trend-goals \">\r\n              <img\r\n                src={goalArrowPic}\r\n                alt={\"logo\"}\r\n                className=\"index-Image flex-children trend-pic\"\r\n              />\r\n              <div className=\"flex-children-trend-goals subheader\">Mål:</div>\r\n            </div>\r\n            <br />\r\n            <div className=\"flex-children-trend-goals flex-side-container-trend-goals\">\r\n              <div className=\"flex-children-trend-goals large-numerical-value\">\r\n                {goalText}\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-parent-upper-right\">\r\n            <br />\r\n            <div className=\"flex-children-trend-goals flex-container-trend-goals lower-trend-goals-div\">\r\n              <img\r\n                src={trendValue > 0 ? upTrianglePic : downTrianglePic}\r\n                alt={\"logo\"}\r\n                className=\"index-Image flex-children trend-pic\"\r\n              />\r\n              <div className=\"flex-children-trend-goals subheader\">Trend:</div>\r\n            </div>\r\n            <br />\r\n            <div className=\"flex-children-trend-goals flex-side-container-trend-goals\">\r\n              <div className=\"flex-children-trend-goals large-numerical-value\">\r\n                {Math.floor(trendValue)} {unit}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CardComponent\r\n        title={\"Trender og Mål: \" + this.displayUnit()}\r\n        content={this.trendGoalsContent()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TrendGoalsCard);\r\n","import React, { Component } from \"react\";\r\nimport periodFromView from \"../../Utils/periodFromView\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNrOfIntervalsBack } from \"../../Redux/actions\";\r\nimport ChevronLeftRounded from \"@helsenorge/toolkit/components/icons/ChevronLeftRounded\";\r\nimport ChevronRightRounded from \"@helsenorge/toolkit/components/icons/ChevronRightRounded\";\r\nimport moment from \"moment\";\r\nimport \"./periodStepper.css\";\r\n\r\n/*\r\n * Component giving arrows for stepping back and forth in time periods. It also shows current\r\n * dates being shown. Uses the view selected in the DateDropdown, and sets the nrOfIntervalsBack\r\n * variable in the redux store.\r\n */\r\n\r\nclass PeriodStepper extends Component {\r\n  leftClicked = () => {\r\n    let value = parseInt(this.props.baseInfo.nrOfIntervalsBack) + 1;\r\n    this.props.setNrOfIntervalsBack(value.toString());\r\n  };\r\n\r\n  rightClicked = () => {\r\n    if (this.props.baseInfo.nrOfIntervalsBack > 0) {\r\n      let value = parseInt(this.props.baseInfo.nrOfIntervalsBack) - 1;\r\n      this.props.setNrOfIntervalsBack(value.toString());\r\n    }\r\n  };\r\n  render() {\r\n    let { periodName } = periodFromView(this.props.baseInfo.view);\r\n    let text;\r\n    if (periodName === \"custom\") {\r\n      text =\r\n        moment(this.props.start, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM\") +\r\n        \" - \" +\r\n        moment(this.props.end, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM\");\r\n    } else {\r\n      if (this.props.baseInfo.nrOfIntervalsBack === \"0\") {\r\n        if (periodName === \"day\") {\r\n          text = moment(this.props.start, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n            \"DD.MM\"\r\n          );\r\n        } else if (periodName === \"year\") {\r\n          text =\r\n            moment(this.props.start, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM.YY\") +\r\n            \" - \" +\r\n            moment(this.props.end, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM.YY\");\r\n        } else {\r\n          text =\r\n            moment(this.props.start, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM\") +\r\n            \" - \" +\r\n            moment(this.props.end, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM\");\r\n        }\r\n      } else {\r\n        if (periodName === \"day\") {\r\n          text = moment(this.props.start, \"YYYY-MM-DDTHH:mm:ss\").format(\r\n            \"DD.MM\"\r\n          );\r\n        } else {\r\n          text =\r\n            moment(this.props.start, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM\") +\r\n            \" - \" +\r\n            moment(this.props.end, \"YYYY-MM-DDTHH:mm:ss\").format(\"DD.MM\");\r\n        }\r\n      }\r\n    }\r\n\r\n    let chevronColor;\r\n    if (this.props.baseInfo.nrOfIntervalsBack > 0) {\r\n      chevronColor = \"#006d84\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <button\r\n          className=\"flex-children datestepper-button datestepper-button-left\"\r\n          onClick={this.leftClicked}\r\n        >\r\n          <ChevronLeftRounded className=\"datestepper-chevron-left\" />\r\n        </button>{\" \"}\r\n        <div className=\"flex-children datestepper-text\">{text}</div>\r\n        <button\r\n          className=\"flex-children datestepper-button datestepper-button-right\"\r\n          onClick={this.rightClicked}\r\n        >\r\n          <ChevronRightRounded style={{ color: chevronColor }} />{\" \"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = { setNrOfIntervalsBack };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PeriodStepper);","import React from \"react\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  Bar,\r\n  BarChart,\r\n  LineChart,\r\n  Line,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport { chartDataByDataType, getDomain } from \"../../../dataTypes\";\r\n\r\nconst InsightGraph = ({ aggregatedData, dataType }) => {\r\n  const chartData = chartDataByDataType[dataType];\r\n  const chartWidth = 400;\r\n  const chartHeight = 180;\r\n  const chartMargin = { top: 20, right: 5, bottom: 10, left: 0 };\r\n\r\n  const yAxis = (\r\n    <YAxis\r\n      label={{\r\n        value: chartData.unit,\r\n        position: \"top\",\r\n        offset: 10,\r\n        fontSize: \"12px\"\r\n      }}\r\n      domain={getDomain(dataType, aggregatedData)}\r\n      tick={{ fontSize: \"12px\" }}\r\n      width={40}\r\n    />\r\n  );\r\n\r\n  if (chartData.chartType === \"bar\") {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <BarChart\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            data={aggregatedData}\r\n            margin={chartMargin}\r\n          >\r\n            {yAxis}\r\n            <XAxis dataKey=\"x\" tick={{ fontSize: \"12px\" }} />\r\n            <Bar dataKey=\"y\" fill=\"#59C3FF\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  } else if (chartData.chartType === \"line\") {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <LineChart\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            data={aggregatedData}\r\n            margin={chartMargin}\r\n          >\r\n            {yAxis}\r\n            <XAxis dataKey=\"x\" tick={{ fontSize: \"12px\" }} />\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"y\"\r\n              stroke=\"#59C3FF\"\r\n              fill=\"#59C3FF\"\r\n              dot={{ strokeWidth: 2, r: 1 }}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default InsightGraph;\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport getStartEndTimes from \"../../../Utils/getStartEndTimes\";\r\nimport periodFromView from \"../../../Utils/periodFromView\";\r\nimport { connect } from \"react-redux\";\r\nimport PeriodStepper from \"../../../Components/PeriodStepper/periodStepper\";\r\nimport InsightGraph from \"./insightGraph\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\n\r\nclass GraphCard extends Component {\r\n  graphContent = () => {\r\n    let { periodName } = periodFromView(this.props.baseInfo.view);\r\n    let { start, end } = getStartEndTimes(\r\n      this.props.baseInfo.view,\r\n      this.props.baseInfo.nrOfIntervalsBack\r\n    );\r\n    if (\r\n      this.props.baseInfo.view === \"custom\" &&\r\n      this.props.baseInfo.start !== \"\" &&\r\n      this.props.baseInfo.end !== \"\"\r\n    ) {\r\n      start = this.props.baseInfo.start;\r\n      end = this.props.baseInfo.end;\r\n    }\r\n    const aggregatedData = getAggregatedDataForDataType(\r\n      this.props.baseInfo,\r\n      this.props.patient.datasets,\r\n      this.props.datatype,\r\n      \"insight\"\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <InsightGraph\r\n          aggregatedData={aggregatedData}\r\n          dataType={this.props.datatype}\r\n        />\r\n        <PeriodStepper start={start} end={end} periodName={periodName} />\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CardComponent title=\"Over tid\" content={this.graphContent()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphCard);\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport \"./patternCard.css\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGoal, BLOODSUGAR } from \"../../../dataTypes\";\r\n\r\nclass PatternCard extends Component {\r\n  patternCardContent = () => {\r\n    const squigglyLinePic = require(\"../../../Images/squigglyPatternIcon.svg\");\r\n    const triangleUpPic = require(\"../../../Images/pinkUpTriangle.svg\");\r\n    const triangleDownPic = require(\"../../../Images/pinkDownTriangle.svg\");\r\n\r\n    let view = this.props.view;\r\n    let goals = this.props.goals;\r\n\r\n    const aggregatedData = getAggregatedDataForDataType(\r\n      this.props.baseInfo,\r\n      this.props.patient.datasets,\r\n      this.props.dataType,\r\n      \"insight\",\r\n      \"YYYY-MM-DDTHH:mm:ss\"\r\n    );\r\n\r\n    let fluctuationText;\r\n    if (this.props.fluctuation !== \"none\") {\r\n      fluctuationText = this.props.fluctuation(view, aggregatedData, goals);\r\n    } else {\r\n      fluctuationText = \"ingen funksjon\";\r\n    }\r\n\r\n    let greatestChangeText;\r\n    let changeValue;\r\n    if (\r\n      this.props.greatestChange !== \"none\" &&\r\n      this.props.dataType !== BLOODSUGAR\r\n    ) {\r\n      [greatestChangeText, changeValue] = this.props.greatestChange(\r\n        view,\r\n        aggregatedData,\r\n        goals\r\n      );\r\n    } else if (this.props.dataType === BLOODSUGAR) {\r\n      fluctuationText =\r\n        \"Den største reduksjonen i gjennomsnittlig blodsukker skjedde fra onsdag til torsdag.\";\r\n      greatestChangeText = \"Du hadde mest svingninger i blodsukker på mandag.\";\r\n    } else {\r\n      greatestChangeText = \"ingen funksjon\";\r\n    }\r\n\r\n    let goal = getGoal(this.props.patient, this.props.dataType).value;\r\n    let pic = triangleDownPic;\r\n    if (this.props.triangle === \"squiggly\") {\r\n      pic = squigglyLinePic;\r\n    } else if (changeValue !== undefined) {\r\n      if (changeValue.y >= goal) {\r\n        pic = triangleUpPic;\r\n      }\r\n    }\r\n\r\n    if (\r\n      (this.props.greatestChange !== \"none\" &&\r\n        this.props.fluctuation !== \"none\") ||\r\n      this.props.dataType !== BLOODSUGAR\r\n    ) {\r\n      return (\r\n        <div>\r\n          <div className=\"flex-container-pattern\">\r\n            <div className=\"flex-children-pattern-image\">\r\n              <img src={pic} alt={\"logo\"} className=\"arrow-icon\" />\r\n            </div>\r\n            <div\r\n              className=\"flex-children-pattern-text\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              {fluctuationText}\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className=\"flex-container-pattern\">\r\n            <div className=\"flex-children-pattern-image\">\r\n              <img\r\n                src={squigglyLinePic}\r\n                alt={\"logo\"}\r\n                className=\"squiggly-icon\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-children-pattern-text\">\r\n              <div style={{ color: \"black\" }}>{greatestChangeText}</div>\r\n            </div>\r\n          </div>\r\n          <div />\r\n        </div>\r\n      );\r\n    } else if (this.props.greatestChange !== \"none\") {\r\n      return (\r\n        <div>\r\n          <div className=\"flex-container-pattern\">\r\n            <div className=\"flex-children-pattern-image\">\r\n              <img src={pic} alt={\"logo\"} className=\"arrow-icon\" />\r\n            </div>\r\n            <div\r\n              className=\"flex-children-pattern-text\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              {greatestChangeText}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.fluctuation !== \"none\") {\r\n      return (\r\n        <div>\r\n          <div className=\"flex-container-pattern\">\r\n            <div className=\"flex-children-pattern-image\">\r\n              <img\r\n                src={squigglyLinePic}\r\n                alt={\"logo\"}\r\n                className=\"squiggly-icon\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"flex-children-pattern-text\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              {fluctuationText}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CardComponent title=\"Mønster\" content={this.patternCardContent()} />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PatternCard);\r\n","import React, { Component } from \"react\";\r\nimport { FormSelect } from \"shards-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setView } from \"../../Redux/actions\";\r\n\r\nimport \"./dateDropdown.css\";\r\n\r\n/*\r\n * Dropdown menu for selecting the period being shown in the graphs and the trends.\r\n * Sets the view variable in the redux store.\r\n */\r\n\r\nclass DateDropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = { open: false };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => {\r\n      return { open: !prevState.open };\r\n    });\r\n  }\r\n\r\n  getState = () => {\r\n    console.log(this.state.open);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormSelect\r\n        onChange={e => this.props.setView(e.target.value)}\r\n        className=\"custom-form-select\"\r\n        defaultValue={this.props.baseInfo.view}\r\n      >\r\n        <option className=\"custom-control\" value=\"day\">\r\n          Dag\r\n        </option>\r\n        <option className=\"custom-control\" value=\"week\">\r\n          7 dager\r\n        </option>\r\n        <option className=\"custom-control\" value=\"2weeks\">\r\n          14 dager\r\n        </option>\r\n        <option className=\"custom-control\" value=\"month\">\r\n          Måned\r\n        </option>\r\n        <option className=\"custom-control\" value=\"3months\">\r\n          Tre måneder\r\n        </option>\r\n        <option className=\"custom-control\" value=\"year\">\r\n          År\r\n        </option>\r\n        <option className=\"custom-control\" value=\"custom\">\r\n          Tilpass dato...\r\n        </option>\r\n      </FormSelect>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { setView };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DateDropdown);","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport DateDropdown from \"../../../Components/DateDropdown/dateDropdown\";\r\nimport \"./insightCards.css\";\r\n\r\nclass ViewCard extends Component {\r\n  state = { view: \"To uker\" };\r\n\r\n  makeContent = () => {\r\n    return (\r\n      <div className=\"view-parent\">\r\n        <div className=\"view-div subheader\">Viser siste</div>\r\n        <div className=\"view-child\">\r\n          <DateDropdown name={this.state.view} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <CardComponent content={this.makeContent()} />;\r\n  }\r\n}\r\n\r\nexport default ViewCard;\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport \"./insightCards.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass CompareDataCard extends Component {\r\n  makeContent = () => {\r\n    return (\r\n      <div>\r\n        <div style={{ color: \"black\" }}>\r\n          Forstå dine resultater bedre ved å sammenligne data.\r\n        </div>\r\n        <br />\r\n        <div className=\"compare-data-card\">\r\n          <Link to={\"/comparedata\"} className=\"link-without-border-bottom\">\r\n            <DisplayButton secondary>\r\n              <div className={\"button-sizing\"}>Sammenlign data </div>\r\n            </DisplayButton>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CardComponent title=\"Forstå din data\" content={this.makeContent()} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompareDataCard;\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport \"./insightCards.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass GoalCard extends Component {\r\n  makeContent = () => {\r\n    return (\r\n      <div>\r\n        <div style={{ color: \"black\" }}>\r\n          Har du behov for å justere dine målsetninger?\r\n        </div>\r\n        <br />\r\n        <div className=\"goal-card\">\r\n          <Link to={\"/mygoals\"} className=\"link-without-border-bottom\">\r\n            <DisplayButton secondary>\r\n              <div className={\"button-sizing\"}>Mine mål </div>\r\n            </DisplayButton>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CardComponent title=\"Sette nye mål?\" content={this.makeContent()} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoalCard;\r\n","import React from \"react\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"react-dates/initialize\";\r\n\r\nimport { DateRangePicker } from \"react-dates\";\r\n\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"./dateSelector.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setStartEnd } from \"../../Redux/actions\";\r\n\r\n/*\r\n * Simple to and from date selector.\r\n * Sets the start and end variables in the redux store when both have been selected.\r\n */\r\n\r\nclass DateSelector extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startDate: null,\r\n      endDate: null\r\n    };\r\n  }\r\n\r\n  startChanged = newStart => {\r\n    if (this.state.end !== null) {\r\n      this.setState({ start: newStart });\r\n      this.props.setStartEnd(newStart, this.state.end);\r\n    } else {\r\n      this.setState({ start: newStart });\r\n    }\r\n  };\r\n\r\n  endChanged = newEnd => {\r\n    if (this.state.start !== null) {\r\n      this.setState({ end: newEnd });\r\n      this.props.setStartEnd(this.state.start, newEnd);\r\n    } else {\r\n      this.setState({ end: newEnd });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DateRangePicker\r\n        startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n        startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n        endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n        endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n        onDatesChange={({ startDate, endDate }) => {\r\n          this.setState({ startDate, endDate });\r\n          if (startDate !== null) {\r\n            this.startChanged(startDate);\r\n          }\r\n          if (endDate !== null) {\r\n            this.endChanged(endDate);\r\n          }\r\n        }} // PropTypes.func.isRequired,\r\n        focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n        onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n        numberOfMonths={1}\r\n        isOutsideRange={day => false}\r\n        firstDayOfWeek={1}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = { setStartEnd };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DateSelector);","import React, { Component } from \"react\";\r\nimport DateSelector from \"../DateSelector/dateSelector\";\r\nimport CardComponent from \"../Card/cardComponent\";\r\nimport \"./dateSelectorCard.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/*\r\n * Card containing the DateSelector, used to get custom start and end dates for graphing and trend calculations.\r\n */\r\n\r\nclass DateSelectorCard extends Component {\r\n  makeContent = () => {\r\n    return (\r\n      <div className=\"custom-date-parent\">\r\n        <span className=\"custom-date-child\">\r\n          <DateSelector />\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let className = \"custom-date-card\";\r\n    if (this.props.baseInfo.view === \"custom\") {\r\n      className = \"custom-date-card custom-date-card-active\";\r\n    }\r\n    return (\r\n      <div className={className}>\r\n        {this.props.baseInfo.view === \"custom\" ? (\r\n          <CardComponent\r\n            className=\"date-selector-card\"\r\n            title=\"Tilpasset dato\"\r\n            content={this.makeContent()}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DateSelectorCard);","export function bloodSugarFluctuations(view, data, goals) {\r\n  return \"Du har ingen målinger i den valgte perioden.\";\r\n}\r\n\r\nexport function bloodSugarGreatestChange(view, data, goals) {\r\n  let valueObj = { y: 0, x: \"28.06\" };\r\n  return [\"work in progress, fix in aggregateData gives errors here\", valueObj];\r\n}\r\n","import React, { Component } from \"react\";\r\nimport NavigationBar from \"../../../Components/NavigationBar/navigationBar.js\";\r\nimport TrendGoalsCard from \"../InsightCards/trendGoalsCard\";\r\nimport GraphCard from \"../InsightCards/graphCard\";\r\nimport PatternCard from \"../InsightCards/patternCard\";\r\nimport ViewCard from \"../InsightCards/viewCard\";\r\nimport CompareDataCard from \"../InsightCards/compareDataCard\";\r\nimport GoalCard from \"../InsightCards/goalCard\";\r\nimport DateSelectorCard from \"../../../Components/DateSelectorCard/dateSelectorCard\";\r\n\r\nimport {\r\n  bloodSugarGreatestChange,\r\n  bloodSugarFluctuations\r\n} from \"../../../Utils/PatternCalculations/bloodSugarPatterns\";\r\nimport { connect } from \"react-redux\";\r\nimport { BLOODSUGAR } from \"../../../dataTypes\";\r\n\r\nclass BloodSugarInsight extends Component {\r\n  render() {\r\n    let fluctuationText = bloodSugarFluctuations;\r\n    let greatestChangeText = bloodSugarGreatestChange;\r\n    if (fluctuationText !== \"none\" || greatestChangeText !== \"none\") {\r\n      return (\r\n        <div style={{ margin: \"0 0 8px\" }}>\r\n          <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n          <NavigationBar />\r\n          <ViewCard />\r\n          <DateSelectorCard />\r\n          <GraphCard datatype={BLOODSUGAR} />\r\n          <TrendGoalsCard datatype=\"Blodsukker\" />\r\n          <PatternCard\r\n            triangle={\"up\"}\r\n            fluctuation={fluctuationText}\r\n            greatestChange={greatestChangeText}\r\n            dataType={BLOODSUGAR}\r\n            view={\"day\"}\r\n            goals={this.props.patient.goals}\r\n          />\r\n          <GoalCard />\r\n          <CompareDataCard />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ margin: \"0 0 8px\" }}>\r\n          <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n          <NavigationBar />\r\n          <ViewCard />\r\n          <DateSelectorCard />\r\n          <GraphCard datatype={BLOODSUGAR} />\r\n          <TrendGoalsCard datatype=\"Blodsukker\" />\r\n          <GoalCard />\r\n          <CompareDataCard />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(BloodSugarInsight);\r\n","import moment from \"moment\";\r\nimport periodFromView from \"../periodFromView\";\r\n\r\nexport function stepsGreatestPeriod(view, data, goals) {\r\n  let { periodName, periodNumber, intervalName } = periodFromView(view);\r\n  let greatestValueObject = data.reduce((prev, current) =>\r\n    prev.y > current.y ? prev : current\r\n  );\r\n  let text = getPatternTextGreatestValue(\r\n    periodName,\r\n    intervalName,\r\n    greatestValueObject,\r\n    periodNumber\r\n  );\r\n  return [text, greatestValueObject];\r\n}\r\n\r\nconst getPatternTextGreatestValue = (\r\n  period,\r\n  interval,\r\n  valueObj,\r\n  periodNumber\r\n) => {\r\n  let time = valueObj.x;\r\n  let value = valueObj.y;\r\n  let startTime;\r\n  let endTime;\r\n  let periodText;\r\n  if (interval === \"day\") {\r\n    startTime = moment(time).format(\"DD.MM\");\r\n    if (period === \"week\" && periodNumber === 1) {\r\n      periodText = \"I løpet av den siste uken gikk du flest skritt den \";\r\n    } else if (period === \"week\" && periodNumber === 2) {\r\n      periodText = \"I løpet av de siste to ukene gikk du flest skritt den \";\r\n    } else {\r\n      periodText = \"I løpet av den siste måneden gikk du flest skritt den \";\r\n    }\r\n    return periodText + startTime + \" (\" + value + \").\";\r\n  } else if (interval === \"hour\") {\r\n    startTime = moment(time).format(\"HH:mm\");\r\n    endTime = moment(time)\r\n      .add(1, \"hours\")\r\n      .format(\"HH:mm\");\r\n    return (\r\n      \"I dag gikk du flest skritt mellom \" +\r\n      startTime +\r\n      \" og \" +\r\n      endTime +\r\n      \" (\" +\r\n      value +\r\n      \").\"\r\n    );\r\n  } else if (interval === \"week\") {\r\n    startTime = moment(time).format(\"DD.MM\");\r\n    endTime = moment(time)\r\n      .add(1, interval)\r\n      .format(\"DD.MM\");\r\n    return (\r\n      \"I løpet av de siste tre månedene gikk du flest skritt mellom \" +\r\n      startTime +\r\n      \" og \" +\r\n      endTime +\r\n      \" (\" +\r\n      value +\r\n      \").\"\r\n    );\r\n  } else if (period === \"year\") {\r\n    startTime = moment(time).format(\"MMMM\");\r\n    return (\r\n      \"I løpet av de siste tre månedene gikk du flest skritt i \" +\r\n      startTime +\r\n      \" (\" +\r\n      value +\r\n      \").\"\r\n    );\r\n  } else if (period === \"custom\") {\r\n    startTime = moment(time).format(\"DD.MM\");\r\n    return (\r\n      \"Du gikk flest skritt den \" +\r\n      startTime +\r\n      \" (\" +\r\n      value +\r\n      \") i den valgte perioden.\"\r\n    );\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport NavigationBar from \"../../../Components/NavigationBar/navigationBar.js\";\r\nimport TrendGoalsCard from \"../InsightCards/trendGoalsCard\";\r\nimport GraphCard from \"../InsightCards/graphCard\";\r\nimport PatternCard from \"../InsightCards/patternCard\";\r\nimport ViewCard from \"../InsightCards/viewCard\";\r\nimport CompareDataCard from \"../InsightCards/compareDataCard\";\r\nimport GoalCard from \"../InsightCards/goalCard\";\r\nimport { stepsGreatestPeriod } from \"../../../Utils/PatternCalculations/stepsPatterns\";\r\nimport { connect } from \"react-redux\";\r\nimport DateSelectorCard from \"../../../Components/DateSelectorCard/dateSelectorCard\";\r\nimport FHIRConnection from \"../../../FHIRCommunication\";\r\nimport { STEPS } from \"../../../dataTypes\";\r\n\r\nclass StepInsight extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      let fluctuationText = \"none\";\r\n      let greatestChangeText = stepsGreatestPeriod;\r\n      if (fluctuationText !== \"none\" || greatestChangeText !== \"none\") {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={STEPS} />\r\n            <TrendGoalsCard datatype=\"Skritt\" />\r\n            <PatternCard\r\n              triangle={\"up\"}\r\n              fluctuation={fluctuationText}\r\n              greatestChange={greatestChangeText}\r\n              dataType={STEPS}\r\n              view={this.props.baseInfo.view}\r\n              goals={this.props.patient.goals}\r\n            />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={STEPS} />\r\n            <TrendGoalsCard datatype=\"Skritt\" />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(StepInsight);\r\n","import React, { Component } from \"react\";\r\nimport NavigationBar from \"../../../Components/NavigationBar/navigationBar.js\";\r\nimport TrendGoalsCard from \"../InsightCards/trendGoalsCard\";\r\nimport GraphCard from \"../InsightCards/graphCard\";\r\nimport PatternCard from \"../InsightCards/patternCard\";\r\nimport ViewCard from \"../InsightCards/viewCard\";\r\nimport CompareDataCard from \"../InsightCards/compareDataCard\";\r\nimport GoalCard from \"../InsightCards/goalCard\";\r\nimport { connect } from \"react-redux\";\r\nimport DateSelectorCard from \"../../../Components/DateSelectorCard/dateSelectorCard\";\r\nimport FHIRConnection from \"../../../FHIRCommunication\";\r\nimport { INSULIN } from \"../../../dataTypes\";\r\n\r\nclass InsulinInsight extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      let fluctuationText = \"none\";\r\n      let greatestChangeText = \"none\";\r\n      if (fluctuationText !== \"none\" || greatestChangeText !== \"none\") {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={INSULIN} />\r\n            <TrendGoalsCard datatype=\"Insulin\" />\r\n            <PatternCard\r\n              triangle={\"down\"}\r\n              fluctuation={fluctuationText}\r\n              greatestChange={greatestChangeText}\r\n              dataType={INSULIN}\r\n              view={this.props.baseInfo.view}\r\n              goals={this.props.patient.goals}\r\n            />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={INSULIN} />\r\n            <TrendGoalsCard datatype=\"Insulin\" />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InsulinInsight);\r\n","import React, { Component } from \"react\";\r\nimport NavigationBar from \"../../../Components/NavigationBar/navigationBar.js\";\r\nimport TrendGoalsCard from \"../InsightCards/trendGoalsCard\";\r\nimport GraphCard from \"../InsightCards/graphCard\";\r\nimport PatternCard from \"../InsightCards/patternCard\";\r\nimport ViewCard from \"../InsightCards/viewCard\";\r\nimport CompareDataCard from \"../InsightCards/compareDataCard\";\r\nimport GoalCard from \"../InsightCards/goalCard\";\r\nimport { connect } from \"react-redux\";\r\nimport DateSelectorCard from \"../../../Components/DateSelectorCard/dateSelectorCard\";\r\nimport FHIRConnection from \"../../../FHIRCommunication\";\r\nimport { WEIGHT } from \"../../../dataTypes\";\r\n\r\nclass WeightInsight extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      let fluctuationText = \"none\";\r\n      let greatestChangeText = \"none\";\r\n      if (fluctuationText !== \"none\" || greatestChangeText !== \"none\") {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={WEIGHT} />\r\n            <TrendGoalsCard datatype=\"Vekt\" />\r\n            <PatternCard\r\n              triangle={\"down\"}\r\n              fluctuation={fluctuationText}\r\n              greatestChange={greatestChangeText}\r\n              datatype={WEIGHT}\r\n              view={this.props.baseInfo.view}\r\n              goals={this.props.patient.goals}\r\n            />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={WEIGHT} />\r\n            <TrendGoalsCard datatype=\"Vekt\" />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeightInsight);\r\n","import React, { Component } from \"react\";\r\nimport NavigationBar from \"../../../Components/NavigationBar/navigationBar.js\";\r\nimport TrendGoalsCard from \"../InsightCards/trendGoalsCard\";\r\nimport GraphCard from \"../InsightCards/graphCard\";\r\nimport PatternCard from \"../InsightCards/patternCard\";\r\nimport ViewCard from \"../InsightCards/viewCard\";\r\nimport CompareDataCard from \"../InsightCards/compareDataCard\";\r\nimport GoalCard from \"../InsightCards/goalCard\";\r\nimport \"../innsikt.css\";\r\nimport { connect } from \"react-redux\";\r\nimport DateSelectorCard from \"../../../Components/DateSelectorCard/dateSelectorCard\";\r\nimport FHIRConnection from \"../../../FHIRCommunication\";\r\nimport { CARBOHYDRATES } from \"../../../dataTypes\";\r\n\r\nclass CarbohydrateInsight extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      let fluctuationText = \"none\";\r\n      let greatestChangeText = \"none\";\r\n      if (fluctuationText !== \"none\" || greatestChangeText !== \"none\") {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={CARBOHYDRATES} />\r\n            <TrendGoalsCard datatype=\"Karbohydrater\" />\r\n            <PatternCard\r\n              triangle={\"down\"}\r\n              fluctuation={fluctuationText}\r\n              greatestChange={greatestChangeText}\r\n              dataType={CARBOHYDRATES}\r\n              view={this.props.baseInfo.view}\r\n              goals={this.props.patient.goals}\r\n            />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={CARBOHYDRATES} />\r\n            <TrendGoalsCard datatype=\"Karbohydrater\" />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CarbohydrateInsight);\r\n","import React, { Component } from \"react\";\r\nimport NavigationBar from \"../../../Components/NavigationBar/navigationBar.js\";\r\nimport TrendGoalsCard from \"../InsightCards/trendGoalsCard\";\r\nimport GraphCard from \"../InsightCards/graphCard\";\r\nimport PatternCard from \"../InsightCards/patternCard\";\r\nimport ViewCard from \"../InsightCards/viewCard\";\r\nimport CompareDataCard from \"../InsightCards/compareDataCard\";\r\nimport GoalCard from \"../InsightCards/goalCard\";\r\nimport { connect } from \"react-redux\";\r\nimport DateSelectorCard from \"../../../Components/DateSelectorCard/dateSelectorCard\";\r\nimport FHIRConnection from \"../../../FHIRCommunication\";\r\nimport { PHYSICAL_ACTIVITY } from \"../../../dataTypes\";\r\n\r\nclass PhysicalActivityInsight extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      let fluctuationText = \"none\";\r\n      let greatestChangeText = \"none\";\r\n      if (fluctuationText !== \"none\" || greatestChangeText !== \"none\") {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={PHYSICAL_ACTIVITY} />\r\n            <TrendGoalsCard datatype=\"FysiskAktivitet\" />\r\n            <PatternCard\r\n              triangle={\"up\"}\r\n              fluctuation={\"none\"}\r\n              greatestChange={\"none\"}\r\n              dataType={PHYSICAL_ACTIVITY}\r\n              view={this.props.baseInfo.view}\r\n              goals={this.props.patient.goals}\r\n            />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div style={{ margin: \"0 0 8px\" }}>\r\n            <h1 style={{ marginLeft: \"8px\" }}>Innsikt</h1>\r\n            <NavigationBar />\r\n            <ViewCard />\r\n            <DateSelectorCard />\r\n            <GraphCard datatype={PHYSICAL_ACTIVITY} />\r\n            <TrendGoalsCard datatype=\"FysiskAktivitet\" />\r\n            <GoalCard />\r\n            <CompareDataCard />\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PhysicalActivityInsight);\r\n","import * as FHIR from \"fhirclient\";\r\nimport moment from \"moment\";\r\nimport fhirUrl from \"../fhirUrl\";\r\n\r\nexport default function addGoal(\r\n  goalId,\r\n  goal,\r\n  descriptionText,\r\n  unit,\r\n  UCUMCode,\r\n  googleId\r\n) {\r\n  let target;\r\n  if (goal.type === \"range\") {\r\n    target = {\r\n      detailRange: {\r\n        low: { value: goal.lower, unit: unit },\r\n        high: { value: goal.upper, unit: unit }\r\n      }\r\n    };\r\n  } else {\r\n    target = {\r\n      detailQuantity: {\r\n        value: goal.value,\r\n        unit: unit,\r\n        system: \"http://unitsofmeasure.org\",\r\n        code: UCUMCode\r\n      }\r\n    };\r\n  }\r\n\r\n  let goalJSON = {\r\n    resourceType: \"Goal\",\r\n    id: goalId,\r\n    meta: {\r\n      versionId: \"1\",\r\n      lastUpdated: moment().format(\"YYYY-MM-DDThh:mm:ss\")\r\n    },\r\n    subject: {\r\n      reference: fhirUrl() + \"/Patient/\" + googleId\r\n    },\r\n    target: target,\r\n    note: { text: goal.type },\r\n    description: { text: descriptionText },\r\n    lifecycleStatus: \"active\"\r\n  };\r\n\r\n  let goalOptions = {\r\n    method: \"PUT\",\r\n    url: fhirUrl() + \"/Goal/\" + goalId,\r\n    headers: {\r\n      \"cache-control\": \"no-cache\",\r\n      Connection: \"keep-alive\",\r\n      \"accept-encoding\": \"gzip, deflate\",\r\n      Accept: \"*/*\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(goalJSON)\r\n  };\r\n\r\n  const client = FHIR.client({\r\n    serverUrl: fhirUrl()\r\n  });\r\n\r\n  console.log(\"Adding goal to FHIR database\");\r\n  client\r\n    .request(goalOptions, (error, response, body) => {})\r\n    .then(goal => {\r\n      console.log(\"Goal: \", goal);\r\n      // this.setState({ observation });\r\n    });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./popupContent.css\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGoal } from \"../../../Redux/actions\";\r\nimport addGoal from \"../../../Utils/addGoal\";\r\n\r\nclass BloodSugarPopupContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      percentGoal: \"\",\r\n      lowerLimit: \"\",\r\n      upperLimit: \"\"\r\n    };\r\n  }\r\n  handleSave = () => {\r\n    if (\r\n      this.state.percentGoal !== \"\" &&\r\n      this.state.lowerLimit !== \"\" &&\r\n      this.state.upperLimit !== \"\"\r\n    ) {\r\n      let goalRange = {\r\n        type: \"range\",\r\n        lower: this.state.lowerLimit,\r\n        upper: this.state.upperLimit\r\n      };\r\n      this.props.changeGoal(\"BloodSugarRangeGoal\", goalRange);\r\n\r\n      let percentGoal = { type: \"lower\", value: this.state.percentGoal, unit: \"%\" };\r\n      this.props.changeGoal(\"BloodSugarWithinRangePercentageGoal\", percentGoal);\r\n\r\n      addGoal(\r\n        \"BloodSugarWithinRangePercentageGoal\",\r\n        percentGoal,\r\n        \"Percentage of time within desired blood sugar range\",\r\n        \"%\",\r\n        \"%\",\r\n        this.props.patient.googleId\r\n      ); // percentage goal\r\n      addGoal(\r\n        \"BloodSugarRangeGoal\",\r\n        goalRange,\r\n        \"Desired blood sugar range\",\r\n        \"mg/dL\",\r\n        \"mg/dL\",\r\n        this.props.patient.googleId\r\n      ); // range goal\r\n    }\r\n  };\r\n  handlepercentGoalChange = event => {\r\n    this.setState({ percentGoal: event.target.value });\r\n  };\r\n\r\n  handlelowerLimitChange = event => {\r\n    this.setState({ lowerLimit: event.target.value });\r\n  };\r\n\r\n  handleupperLimitChange = event => {\r\n    this.setState({ upperLimit: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <h2> Blodsukker</h2>\r\n        <div>Tid innenfor grenseverdier</div>\r\n        <div className=\"popup-content-center-text\">\r\n          <br />\r\n          Jeg ønsker å være mer enn\r\n          <input\r\n            type=\"number\"\r\n            className=\"goal-input\"\r\n            id=\"single-input\"\r\n            value={this.state.percentGoal}\r\n            onChange={this.handlepercentGoalChange}\r\n          />\r\n          prosent av tiden innenfor grenseverdien\r\n          <hr />\r\n          Jeg har oppnådd målet mellom\r\n          <div className=\"sugar-input-div-parent\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"sugar-input-child goal-input\"\r\n              id=\"double-input1\"\r\n              value={this.state.lowerLimit}\r\n              onChange={this.handlelowerLimitChange}\r\n            />\r\n            <div className=\"sugar-input-child\"> og </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"sugar-input-child goal-input\"\r\n              id=\"double-input2\"\r\n              value={this.state.upperLimit}\r\n              onChange={this.handleupperLimitChange}\r\n            />\r\n          </div>\r\n          mmol/l\r\n          <br />\r\n          <br />\r\n          <DisplayButton\r\n            className=\"goal-save-button\"\r\n            onClick={event => {\r\n              this.handleSave();\r\n              this.props.onSave(event);\r\n            }}\r\n            secondary\r\n          >\r\n            Lagre\r\n          </DisplayButton>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = { changeGoal };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BloodSugarPopupContent);\r\n","import React, { Component } from \"react\";\r\nimport \"./popupContent.css\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGoal } from \"../../../Redux/actions\";\r\nimport addGoal from \"../../../Utils/addGoal\";\r\n\r\nclass BloodSugarMeanPopupContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      goal: \"\"\r\n    };\r\n  }\r\n  handleSave = () => {\r\n    if (this.state.goal !== \"\") {\r\n      let goal = { type: \"upper\", value: this.state.goal, unit: \"\" };\r\n      // console.log(\"goal: \", goal);\r\n      this.props.changeGoal(\"MeanGlucoseGoal\", goal);\r\n      addGoal(\r\n        \"MeanGlucoseGoal\",\r\n        goal,\r\n        \"Desired upper limit of the mean blood glucose\",\r\n        \"mmol/l\",\r\n        \"mmol/l\",\r\n        this.props.patient.googleId\r\n      ); // range goal\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ goal: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <h2> Blodsukker</h2> Gjennomsnittlig nivå\r\n        <div className=\"popup-content-center-text\">\r\n          <br />\r\n          Jeg ønsker å ha mindre enn\r\n          <input\r\n            type=\"number\"\r\n            className=\"goal-input\"\r\n            id=\"single-input\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          mml/l i gjennomsnittlig glukoseverdi\r\n          <br />\r\n          <br />\r\n          <DisplayButton\r\n            className=\"goal-save-button\"\r\n            onClick={event => {\r\n              this.handleSave();\r\n              this.props.onSave(event);\r\n            }}\r\n            secondary\r\n          >\r\n            Lagre\r\n          </DisplayButton>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = { changeGoal };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BloodSugarMeanPopupContent);\r\n","import React, { Component } from \"react\";\r\nimport \"./popupContent.css\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGoal } from \"../../../Redux/actions\";\r\nimport addGoal from \"../../../Utils/addGoal\";\r\n\r\nclass CarbsPopupContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      goal: \"\"\r\n    };\r\n  }\r\n  handleSave = () => {\r\n    if (this.state.goal !== \"\") {\r\n      let goal = { type: \"upper\", value: this.state.goal };\r\n      // console.log(\"goal: \", goal);\r\n      this.props.changeGoal(\"CarbsGoal\", goal);\r\n      addGoal(\r\n        \"CarbsGoal\",\r\n        goal,\r\n        \"Max grams of carbohydrates per day\",\r\n        \"g\",\r\n        \"g\",\r\n        this.props.patient.googleId\r\n      ); // range goal\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ goal: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <h2> Karbohydrater </h2>\r\n        <div className=\"popup-content-center-text\">\r\n          <br />\r\n          Jeg ønsker å spise mindre enn\r\n          <input\r\n            type=\"number\"\r\n            className=\"goal-input\"\r\n            id=\"single-input\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          gram karbohydrater per dag\r\n          <br />\r\n          <br />\r\n          <DisplayButton\r\n            className=\"goal-save-button\"\r\n            onClick={event => {\r\n              this.handleSave();\r\n              this.props.onSave(event);\r\n            }}\r\n            secondary\r\n          >\r\n            Lagre\r\n          </DisplayButton>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = { changeGoal };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CarbsPopupContent);\r\n","import React, { Component } from \"react\";\r\nimport \"./popupContent.css\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGoal } from \"../../../Redux/actions\";\r\nimport addGoal from \"../../../Utils/addGoal\";\r\n\r\nclass PhysicalActivityPopupContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      goal: \"\"\r\n    };\r\n  }\r\n  handleSave = () => {\r\n    if (this.state.goal !== \"\") {\r\n      let goal = { type: \"lower\", value: this.state.goal };\r\n      // console.log(\"goal: \", goal);\r\n      this.props.changeGoal(\"PhysicalActivityGoal\", goal);\r\n      addGoal(\r\n        \"PhysicalActivityGoal\",\r\n        goal,\r\n        \"Desired number of minutes of physical activity each week\",\r\n        \"min\",\r\n        \"min\",\r\n        this.props.patient.googleId\r\n      ); // range goal\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ goal: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <h2> Fysisk aktivitet</h2>\r\n        <div className=\"popup-content-center-text\">\r\n          <br />\r\n          Jeg ønsker å være i fysisk aktivitet minst\r\n          <input\r\n            type=\"number\"\r\n            className=\"goal-input\"\r\n            id=\"single-input\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          minutter per uke\r\n          <br />\r\n          <br />\r\n          <DisplayButton\r\n            className=\"goal-save-button\"\r\n            onClick={event => {\r\n              this.handleSave();\r\n              this.props.onSave(event);\r\n            }}\r\n            secondary\r\n          >\r\n            Lagre\r\n          </DisplayButton>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = { changeGoal };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PhysicalActivityPopupContent);\r\n","import React, { Component } from \"react\";\r\nimport \"./popupContent.css\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGoal } from \"../../../Redux/actions\";\r\nimport addGoal from \"../../../Utils/addGoal\";\r\n\r\nclass StepsPopupContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      goal: \"\"\r\n    };\r\n  }\r\n  handleSave = () => {\r\n    if (this.state.goal !== \"\") {\r\n      let goal = { type: \"lower\", value: this.state.goal };\r\n      // console.log(\"goal: \", goal);\r\n      this.props.changeGoal(\"StepsGoal\", goal);\r\n      addGoal(\r\n        \"StepsGoal\",\r\n        goal,\r\n        \"Desired number of steps per day\",\r\n        \"skritt\",\r\n        \"skritt\",\r\n        this.props.patient.googleId\r\n      ); // range goal\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ goal: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <h2> Skritt</h2>\r\n        <div className=\"popup-content-center-text\">\r\n          <br />\r\n          Jeg ønsker å gå mer enn\r\n          <input\r\n            type=\"number\"\r\n            className=\"goal-input\"\r\n            id=\"single-input\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          skritt per dag\r\n          <br />\r\n          <br />\r\n          <DisplayButton\r\n            className=\"goal-save-button\"\r\n            onClick={event => {\r\n              this.handleSave();\r\n              this.props.onSave(event);\r\n            }}\r\n            secondary\r\n          >\r\n            Lagre\r\n          </DisplayButton>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = { changeGoal };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StepsPopupContent);\r\n","import React, { Component } from \"react\";\r\nimport \"./popupContent.css\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeGoal } from \"../../../Redux/actions\";\r\nimport addGoal from \"../../../Utils/addGoal\";\r\n\r\nclass WeightPopupContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      goal: \"\"\r\n    };\r\n  }\r\n  handleSave = () => {\r\n    if (this.state.goal !== \"\") {\r\n      let goal = { type: \"upper\", value: this.state.goal };\r\n      // console.log(\"goal: \", goal);\r\n      this.props.changeGoal(\"WeightGoal\", goal);\r\n      addGoal(\r\n        \"WeightGoal\",\r\n        goal,\r\n        \"Desired weight to get under\",\r\n        \"kg\",\r\n        \"kg\",\r\n        this.props.patient.googleId\r\n      ); // range goal\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ goal: event.target.value });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <h2> Vekt</h2>\r\n        <div className=\"popup-content-center-text\">\r\n          <br />\r\n          Jeg ønsker å veie mindre enn\r\n          <input\r\n            type=\"number\"\r\n            className=\"goal-input\"\r\n            id=\"single-input\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          kilogram\r\n          <br />\r\n          <br />\r\n          <DisplayButton\r\n            className=\"goal-save-button\"\r\n            onClick={event => {\r\n              this.handleSave();\r\n              this.props.onSave(event);\r\n            }}\r\n            secondary\r\n          >\r\n            Lagre\r\n          </DisplayButton>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = { changeGoal };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WeightPopupContent);\r\n","import React, { Component } from \"react\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport EditOutlined from \"@helsenorge/toolkit/components/icons/EditOutlined\";\r\nimport { LightBox } from \"@helsenorge/toolkit/components/molecules/lightbox\";\r\nimport BloodSugarPopupContent from \"../../Pages/MyGoalsPage/GoalPopupContents/bloodSugarPopupContent\";\r\nimport BloodSugarMeanPopupContent from \"../../Pages/MyGoalsPage/GoalPopupContents/bloodSugarMeanPopupContent\";\r\nimport CarbsPopupContent from \"../../Pages/MyGoalsPage/GoalPopupContents/carbsPopupContent\";\r\nimport PhysicalActivityPopupContent from \"../../Pages/MyGoalsPage/GoalPopupContents/physicalActivityPopupContent\";\r\nimport StepsPopupContent from \"../../Pages/MyGoalsPage/GoalPopupContents/stepsPopupContent\";\r\nimport WeightPopupContent from \"../../Pages/MyGoalsPage/GoalPopupContents/weightPopupContent\";\r\nimport \"./changeGoalButton.css\";\r\n\r\n/*\r\n * When ChangeGoalButton is clicked a lightbox pops up that gives the option of changing the relevant goal.\r\n * Which goal is relevant is chosen based on this.props.datatype that needs to be sent in to the component.\r\n * The different goal contents are all in the folder /Pages/MyGoalsPage/GoalPopupContents. When a new goal\r\n * is selected and the save button is pressed, the goal is added to redux store and sent to the fhir server.\r\n */\r\n\r\nclass ChangeGoalButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleClick(event) {\r\n    if (this.state.open) {\r\n      this.setState({ open: false });\r\n    } else {\r\n      this.setState({ open: true });\r\n    }\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  popupContent() {\r\n    switch (this.props.datatype) {\r\n      case \"Blodsukker\":\r\n        return (\r\n          <BloodSugarPopupContent\r\n            onSave={event => {\r\n              this.handleClick(event);\r\n            }}\r\n          />\r\n        );\r\n      case \"BlodsukkerAvg\":\r\n        return (\r\n          <BloodSugarMeanPopupContent\r\n            onSave={event => {\r\n              this.handleClick(event);\r\n            }}\r\n          />\r\n        );\r\n      case \"Skritt\":\r\n        return (\r\n          <StepsPopupContent\r\n            onSave={event => {\r\n              this.handleClick(event);\r\n            }}\r\n          />\r\n        );\r\n      case \"Vekt\":\r\n        return (\r\n          <WeightPopupContent\r\n            onSave={event => {\r\n              this.handleClick(event);\r\n            }}\r\n          />\r\n        );\r\n      case \"FysiskAktivitet\":\r\n        return (\r\n          <PhysicalActivityPopupContent\r\n            onSave={event => {\r\n              this.handleClick(event);\r\n            }}\r\n          />\r\n        );\r\n      case \"Karbohydrater\":\r\n        return (\r\n          <CarbsPopupContent\r\n            onSave={event => {\r\n              this.handleClick(event);\r\n            }}\r\n          />\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  render() {\r\n    const button = (\r\n      <DisplayButton onClick={this.handleClick} secondary>\r\n        <div className=\"flex-container-button\">\r\n          <EditOutlined className=\"flex-children-button-icon editOutlinedStyle\" />\r\n          <div className=\"flex-children-button editText\">Rediger</div>\r\n        </div>\r\n      </DisplayButton>\r\n    );\r\n    let lightbox = (\r\n      <LightBox\r\n        isVisible={this.state.open}\r\n        onClose={this.handleClick}\r\n        noAbort={false}\r\n        noCloseButton={true}\r\n        noPadding={false}\r\n        small={false}\r\n        medium={false}\r\n        large={false}\r\n      >\r\n        {\"Rediger mål for:\"}\r\n        {this.popupContent()}\r\n      </LightBox>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {button}\r\n        {lightbox}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangeGoalButton;","import \"./goalContent.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ChangeGoalButton from \"../../../Components/ChangeGoalButton/changeGoalButton\";\r\nimport { PieChart, Pie, Cell, Label, ResponsiveContainer } from \"recharts\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport FakeGlucoseData from \"../../../Utils/fakeGlucose\";\r\nimport Trends from \"../../../Utils/trends\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\nimport {\r\n  STEPS,\r\n  WEIGHT,\r\n  BLOODSUGAR,\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES\r\n} from \"../../../dataTypes\";\r\n\r\nclass GoalContent extends Component {\r\n  CustomLabel(value1, value2, xPos) {\r\n    return (\r\n      <text dominantBaseline=\"central\">\r\n        <tspan x={65} y={70} alignmentBaseline=\"middle\" fontSize=\"16\">\r\n          {value1}\r\n        </tspan>\r\n        <tspan x={xPos} y={90} alignmentBaseline=\"middle\" fontSize=\"18\">\r\n          {value2}\r\n        </tspan>\r\n      </text>\r\n    );\r\n  }\r\n\r\n  displayUnit = () => {\r\n    switch (this.props.datatype) {\r\n      case \"Blodsukker\":\r\n        return \"/dag\";\r\n      case \"BlodsukkerAvg\":\r\n        return \"mmol/l\";\r\n      case \"skritt/dag\":\r\n        return \"skritt\";\r\n      case \"Vekt\":\r\n        return \"kilogram\";\r\n      case \"FysiskAktivitet\":\r\n        return \"min/uke\";\r\n      case \"Karbohydrater\":\r\n        return \"gram/dag\";\r\n      case \"Blodtrykk\":\r\n        return \"mmHg/dag\";\r\n      default:\r\n        return \"Default\";\r\n    }\r\n  };\r\n\r\n  goalContent = () => {\r\n    let generalColors = [\"#E38B21\", \"#EEE05D\", \"#569B7E\", \"#EEE05D\", \"#E38B21\"];\r\n    let overColors = [\"#E38B21\", \"#EEE05D\", \"#569B7E\"];\r\n    let underColors = [\"#569B7E\", \"#EEE05D\", \"#E38B21\"];\r\n    let COLORS = [];\r\n    let dataSet = [\r\n      { value: 1 },\r\n      { value: 1 },\r\n      { value: 1 },\r\n      { value: 1 },\r\n      { value: 1 }\r\n    ];\r\n\r\n    let xPos;\r\n    let data = FakeGlucoseData();\r\n    let upperLimit = 12;\r\n    let lowerLimit = 5;\r\n    let goalValue = \"undefined\";\r\n    let { mean, timeAbove, timeWithin, timeBelow } = Trends(\r\n      data,\r\n      upperLimit,\r\n      lowerLimit\r\n    );\r\n    let currentValue =\r\n      (timeWithin * 100) / (timeAbove + timeWithin + timeBelow);\r\n    let unit = \"%\";\r\n    let trends;\r\n\r\n    switch (this.props.datatype) {\r\n      case \"Blodsukker\":\r\n        COLORS = overColors;\r\n        dataSet = [{ value: 1 }, { value: 1 }, { value: 3 }];\r\n        goalValue = this.props.patient.goals.BloodSugarWithinRangePercentageGoal\r\n          .value;\r\n        xPos = 72;\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          BLOODSUGAR,\r\n          \"goal\"\r\n        );\r\n        upperLimit = goalValue;\r\n        lowerLimit = goalValue / 5;\r\n        currentValue =\r\n          (timeWithin * 100) / (timeAbove + timeWithin + timeBelow);\r\n        unit = \"%\";\r\n        break;\r\n      case \"BlodsukkerAvg\":\r\n        COLORS = generalColors;\r\n        goalValue = this.props.patient.goals.MeanGlucoseGoal.value;\r\n        unit = \"mmol/l\";\r\n        xPos = 51;\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          BLOODSUGAR,\r\n          \"goal\"\r\n        );\r\n        upperLimit = goalValue * 2;\r\n        lowerLimit = goalValue / 2;\r\n        trends = Trends(data, upperLimit, lowerLimit);\r\n        mean = trends.mean;\r\n        currentValue = mean;\r\n        break;\r\n      case \"Skritt\":\r\n        COLORS = overColors;\r\n        dataSet = [{ value: 1 }, { value: 1 }, { value: 3 }];\r\n        goalValue = this.props.patient.goals.StepsGoal.value;\r\n        xPos = 48;\r\n        data = this.props.patient.datasets[0].measurements;\r\n        upperLimit = goalValue;\r\n        lowerLimit = goalValue / 5;\r\n        let aggregated = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          STEPS,\r\n          \"goal\"\r\n        );\r\n        trends = Trends(aggregated, upperLimit, lowerLimit);\r\n        mean = trends.mean;\r\n        currentValue = mean;\r\n        unit = \"skritt\";\r\n        break;\r\n      case \"Vekt\":\r\n        dataSet = [{ value: 2 }, { value: 2 }, { value: 1 }];\r\n        COLORS = underColors;\r\n        goalValue = this.props.patient.goals.WeightGoal.value;\r\n        unit = \"kg\";\r\n        xPos = 67;\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          WEIGHT,\r\n          \"goal\"\r\n        );\r\n        upperLimit = goalValue;\r\n        lowerLimit = goalValue / 5;\r\n        trends = Trends(data, upperLimit, lowerLimit);\r\n        mean = trends.mean;\r\n        currentValue = mean;\r\n        break;\r\n      case \"FysiskAktivitet\":\r\n        COLORS = overColors;\r\n        dataSet = [{ value: 1 }, { value: 1 }, { value: 3 }];\r\n        goalValue = this.props.patient.goals.PhysicalActivityGoal.value;\r\n        unit = \"min\";\r\n        xPos = 58;\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          PHYSICAL_ACTIVITY,\r\n          \"goal\"\r\n        );\r\n        let activeMin = 0;\r\n        for (let i = 0; i < data.length; i++) {\r\n          activeMin += data[i].y;\r\n        }\r\n        upperLimit = goalValue;\r\n        lowerLimit = goalValue / 5;\r\n        currentValue = activeMin;\r\n        break;\r\n      case \"Karbohydrater\":\r\n        COLORS = generalColors;\r\n        goalValue = this.props.patient.goals.CarbsGoal.value;\r\n        unit = \"g\";\r\n        xPos = 70;\r\n        data = getAggregatedDataForDataType(\r\n          this.props.baseInfo,\r\n          this.props.patient.datasets,\r\n          CARBOHYDRATES,\r\n          \"goal\"\r\n        );\r\n        upperLimit = goalValue;\r\n        lowerLimit = goalValue / 5;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    let arrowAngle;\r\n\r\n    if (currentValue < lowerLimit) {\r\n      arrowAngle = (-40 + (currentValue - lowerLimit) * 220) * (Math.PI / 180);\r\n    } else if (currentValue > upperLimit) {\r\n      arrowAngle = (-40 + (currentValue - upperLimit) * -40) * (Math.PI / 180);\r\n    } else {\r\n      arrowAngle =\r\n        (-40 +\r\n          ((currentValue - lowerLimit) / (currentValue - upperLimit)) * 260) *\r\n        (Math.PI / 180);\r\n    }\r\n\r\n    let triangleAngle = (70 * Math.PI) / 180;\r\n    let r = 20;\r\n    let theta = 9;\r\n    let radius = 45;\r\n\r\n    let centerX = 87.5 + radius * Math.cos(-arrowAngle);\r\n    let centerY = 80 + radius * Math.sin(-arrowAngle);\r\n    let x1 = Math.floor(centerX + r * Math.cos(-arrowAngle));\r\n    let y1 = Math.floor(centerY + r * Math.sin(-arrowAngle));\r\n    let x2 = Math.floor(\r\n      centerX + theta * Math.cos(-arrowAngle - triangleAngle)\r\n    );\r\n    let y2 = Math.floor(\r\n      centerY + theta * Math.sin(-arrowAngle - triangleAngle)\r\n    );\r\n    let x3 = Math.floor(\r\n      centerX + theta * Math.cos(-arrowAngle + triangleAngle)\r\n    );\r\n    let y3 = Math.floor(\r\n      centerY + theta * Math.sin(-arrowAngle + triangleAngle)\r\n    );\r\n\r\n    let pointString = x1 + \" \" + y1 + \" \" + x2 + \" \" + y2 + \" \" + x3 + \" \" + y3;\r\n\r\n    return (\r\n      <div className=\"flex-container-trend-goals outer-div-trend-goals\">\r\n        <div className=\"split\">\r\n          <div className=\"circleBound\">\r\n            <div className=\"goalText\">Mål:</div>\r\n            <div className=\"goalPercentText\">{goalValue}</div>\r\n            <div className=\"unitText\">{this.displayUnit()}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row split rowStyle\">\r\n          <div className=\"pieChartStyle\">\r\n            <ResponsiveContainer\r\n              className=\"flex-children-trend-goals\"\r\n              width={175}\r\n              height={160}\r\n            >\r\n              <PieChart>\r\n                <Pie\r\n                  data={dataSet}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  innerRadius={68}\r\n                  outerRadius={80}\r\n                  startAngle={220}\r\n                  endAngle={-40}\r\n                  fill=\"#8884d8\"\r\n                >\r\n                  {dataSet.map((entry, index) => (\r\n                    <Cell key=\"\" fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                  <Label\r\n                    position=\"center\"\r\n                    content={this.CustomLabel(\r\n                      \"Status: \",\r\n                      Math.floor(currentValue) + \" \" + unit,\r\n                      xPos\r\n                    )}\r\n                  />\r\n                </Pie>\r\n                <svg>\r\n                  <polygon\r\n                    points={pointString}\r\n                    fill=\"#4F4F4F\"\r\n                    className=\"trend-polygon\"\r\n                  />\r\n                </svg>\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          <div>\r\n            <div className=\"button-style\">\r\n              <ChangeGoalButton datatype={this.props.datatype} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CardComponent title={this.props.title} content={this.goalContent()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GoalContent);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./myGoalsPage.css\";\r\nimport GoalContent from \"./GoalContent/goalContent\";\r\nimport FHIRConnection from \"../../FHIRCommunication\";\r\n\r\n/*\r\n * Page showing the different goals and current status towards those goals, as well\r\n * as a button that lets you change them.\r\n */\r\n\r\nclass MyGoals extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      return (\r\n        <div>\r\n          <div className=\"insight-header\">\r\n            <h1 className=\"header-container\">Sett mål</h1>\r\n            <div className=\"status-container\">\r\n              Viser status fra siste 7 dager\r\n            </div>\r\n          </div>\r\n          <GoalContent\r\n            datatype=\"Blodsukker\"\r\n            title=\"Blodsukker: Tid innenfor grenseverdi\"\r\n          />\r\n          <GoalContent\r\n            datatype=\"BlodsukkerAvg\"\r\n            title=\"Blodsukker: Gjennomsnittlig nivå\"\r\n          />\r\n          <GoalContent datatype=\"Skritt\" title=\"Skritt\" />\r\n          <GoalContent datatype=\"Vekt\" title=\"Vekt\" />\r\n          <GoalContent datatype=\"FysiskAktivitet\" title=\"Fysisk aktivitet\" />\r\n          <GoalContent datatype=\"Karbohydrater\" title=\"Karbohydrater\" />\r\n          {/* <GoalContent datatype=\"Blodtrykk\" title=\"Blodtrykk\" /> */}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MyGoals);\r\n","import React from \"react\";\r\nimport {\r\n  YAxis,\r\n  Bar,\r\n  BarChart,\r\n  LineChart,\r\n  Line,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport { chartDataByDataType, getDomain } from \"../../../dataTypes\";\r\n\r\nconst CompareDataGraph = ({ aggregatedData, dataType }) => {\r\n  const chartData = chartDataByDataType[dataType];\r\n  const chartWidth = 350;\r\n  const chartHeight = 150;\r\n  const chartMargin = { top: 20, right: 30, left: 0, bottom: 0 };\r\n\r\n  const yAxis = (\r\n    <YAxis\r\n      label={{\r\n        value: chartData.unit,\r\n        position: \"top\",\r\n        offset: 10,\r\n        fontSize: \"12px\"\r\n      }}\r\n      domain={getDomain(dataType, aggregatedData)}\r\n      tick={{ fontSize: \"12px\" }}\r\n      width={40}\r\n    />\r\n  );\r\n\r\n  if (chartData.chartType === \"bar\") {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <BarChart\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            data={aggregatedData}\r\n            margin={chartMargin}\r\n          >\r\n            {yAxis}\r\n            <Bar dataKey=\"y\" fill={chartData.color} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  } else if (chartData.chartType === \"line\") {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <LineChart\r\n            width={chartWidth}\r\n            height={chartHeight}\r\n            data={aggregatedData}\r\n            margin={chartMargin}\r\n          >\r\n            {yAxis}\r\n            <Line\r\n              type=\"linear\"\r\n              dataKey=\"y\"\r\n              stroke={chartData.color}\r\n              fill={chartData.color}\r\n              dot={{ strokeWidth: 2, r: 1 }}\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CompareDataGraph;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { XAxis, BarChart, ResponsiveContainer } from \"recharts\";\r\nimport PeriodStepper from \"../../../Components/PeriodStepper/periodStepper\";\r\nimport periodFromView from \"../../../Utils/periodFromView\";\r\nimport aggregateData from \"../../../Utils/aggregateData\";\r\nimport getStartEndTimes from \"../../../Utils/getStartEndTimes\";\r\nimport getFormat from \"../../../Utils/getFormat\";\r\nimport {\r\n  BLOODSUGAR,\r\n  INSULIN,\r\n  STEPS,\r\n  WEIGHT,\r\n  PHYSICAL_ACTIVITY,\r\n  CARBOHYDRATES\r\n} from \"../../../dataTypes\";\r\nimport CompareDataGraph from \"./compareDataGraph\";\r\nimport { getAggregatedDataForDataType } from \"../../../Utils/aggregatedDataForDataType\";\r\n\r\nclass MultipleGraphCard extends Component {\r\n  makeGraph = dataType => {\r\n    const aggregatedData = getAggregatedDataForDataType(\r\n      this.props.baseInfo,\r\n      this.props.patient.datasets,\r\n      dataType,\r\n      \"compareData\"\r\n    );\r\n    return (\r\n      <CompareDataGraph aggregatedData={aggregatedData} dataType={dataType} />\r\n    );\r\n  };\r\n\r\n  makePeriodStepper = data => {\r\n    if (data) {\r\n      let { start, end } = getStartEndTimes(\r\n        this.props.baseInfo.view,\r\n        this.props.baseInfo.nrOfIntervalsBack\r\n      );\r\n      if (\r\n        this.props.baseInfo.view === \"custom\" &&\r\n        this.props.baseInfo.start !== \"\" &&\r\n        this.props.baseInfo.end !== \"\"\r\n      ) {\r\n        start = this.props.baseInfo.start;\r\n        end = this.props.baseInfo.end;\r\n      }\r\n      return (\r\n        <PeriodStepper\r\n          start={start}\r\n          end={end}\r\n          periodName={this.props.baseInfo.view.periodName}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  makeContent = () => {\r\n    let dataTypes = this.props.baseInfo;\r\n    let bloodSugar = dataTypes.bloodSugarChecked;\r\n    let insulin = dataTypes.insulinChecked;\r\n    let steps = dataTypes.stepsChecked;\r\n    let weight = dataTypes.weightChecked;\r\n    let physicalActivity = dataTypes.physicalActivityChecked;\r\n    let carbohydrates = dataTypes.carbohydratesChecked;\r\n\r\n    let { periodName, periodNumber, intervalName } = periodFromView(\r\n      this.props.baseInfo.view\r\n    );\r\n    let startEndTimes = getStartEndTimes(\r\n      this.props.baseInfo.view,\r\n      this.props.baseInfo.nrOfIntervalsBack\r\n    );\r\n    let start = startEndTimes.start;\r\n    let end = startEndTimes.end;\r\n    let xAxisTicks = aggregateData(\r\n      [\r\n        {\r\n          value: 0,\r\n          start: moment()\r\n            .subtract(periodNumber, periodName)\r\n            .format(\"YYYY-MM-DDTHH:mm:ss\")\r\n        }\r\n      ],\r\n      intervalName,\r\n      start,\r\n      end,\r\n      getFormat(periodName, intervalName)\r\n    );\r\n    const noDataTypesChecked =\r\n      (bloodSugar ||\r\n        insulin ||\r\n        steps ||\r\n        weight ||\r\n        physicalActivity ||\r\n        carbohydrates) === false;\r\n\r\n    if (noDataTypesChecked) {\r\n      return (\r\n        <span style={{ color: \"black\" }}>\r\n          Velg de datatypene du vil sammenligne fra listen nedenfor.\r\n        </span>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div>\r\n            {bloodSugar && this.makeGraph(BLOODSUGAR)}\r\n            {insulin && this.makeGraph(INSULIN)}\r\n            {steps && this.makeGraph(STEPS)}\r\n            {weight && this.makeGraph(WEIGHT)}\r\n            {physicalActivity && this.makeGraph(PHYSICAL_ACTIVITY)}\r\n            {carbohydrates && this.makeGraph(CARBOHYDRATES)}\r\n            <ResponsiveContainer width=\"100%\" height={30}>\r\n              <BarChart\r\n                width={350}\r\n                height={30}\r\n                data={xAxisTicks}\r\n                margin={{ top: 0, right: 30, left: 40, bottom: 0 }}\r\n              >\r\n                <XAxis dataKey=\"x\" tick={{ fontSize: \"12px\" }} />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          {this.makePeriodStepper(\r\n            bloodSugar ||\r\n              insulin ||\r\n              steps ||\r\n              weight ||\r\n              physicalActivity ||\r\n              carbohydrates\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <CardComponent title={\"Over tid\"} content={this.makeContent()} />;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MultipleGraphCard);\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport CheckBoxGroup from \"@helsenorge/toolkit/components/atoms/checkbox-group\";\r\nimport \"./compareDataCards.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setBloodSugarChecked,\r\n  setInsulinChecked,\r\n  setStepsChecked,\r\n  setWeightChecked,\r\n  setPhysicalActivityChecked,\r\n  setCarbohydratesChecked,\r\n  setNumberChecked\r\n} from \"../../../Redux/actions\";\r\n\r\nclass DataTypeCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      checkboxes: [\r\n        {\r\n          id: \"bloodSugar\",\r\n          label: \"\",\r\n          checked: this.props.baseInfo.bloodSugarChecked\r\n        },\r\n        {\r\n          id: \"insulin\",\r\n          label: \"\",\r\n          checked: this.props.baseInfo.insulinChecked\r\n        },\r\n        { id: \"steps\", label: \"\", checked: this.props.baseInfo.stepsChecked },\r\n        {\r\n          id: \"weight\",\r\n          label: \"\",\r\n          checked: this.props.baseInfo.weightChecked\r\n        },\r\n        {\r\n          id: \"physicalActivity\",\r\n          label: \"\",\r\n          checked: this.props.baseInfo.physicalActivityChecked\r\n        },\r\n        {\r\n          id: \"carbohydrates\",\r\n          label: \"\",\r\n          checked: this.props.baseInfo.carbohydratesChecked\r\n        }\r\n      ],\r\n      numberChecked: this.props.baseInfo.numberChecked,\r\n      errorMessage: false\r\n    };\r\n  }\r\n\r\n  handleChange = id => {\r\n    let counter = this.state.numberChecked;\r\n    let checkboxArray = this.state.checkboxes;\r\n\r\n    checkboxArray.forEach(e => {\r\n      if (e.id === id) {\r\n        if (this.state.numberChecked < 6 || e.checked === true) {\r\n          if (e.checked === true) {\r\n            counter = counter - 1;\r\n          } else {\r\n            counter += 1;\r\n            document.getElementById(\"filterCard\").scrollIntoView();\r\n          }\r\n          e.checked = !e.checked;\r\n          this.setState({ errorMessage: false });\r\n        } else {\r\n          this.setState({ errorMessage: true });\r\n        }\r\n        this.setState({ numberChecked: counter });\r\n        this.props.setNumberChecked(counter);\r\n        switch (e.id) {\r\n          case \"bloodSugar\":\r\n            this.props.setBloodSugarChecked(this.state.checkboxes[0].checked);\r\n            break;\r\n          case \"insulin\":\r\n            this.props.setInsulinChecked(this.state.checkboxes[1].checked);\r\n            break;\r\n          case \"steps\":\r\n            this.props.setStepsChecked(this.state.checkboxes[2].checked);\r\n            break;\r\n          case \"weight\":\r\n            this.props.setWeightChecked(this.state.checkboxes[3].checked);\r\n            break;\r\n          case \"physicalActivity\":\r\n            this.props.setPhysicalActivityChecked(\r\n              this.state.checkboxes[4].checked\r\n            );\r\n            break;\r\n          case \"carbohydrates\":\r\n            this.props.setCarbohydratesChecked(\r\n              this.state.checkboxes[5].checked\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      return e;\r\n    });\r\n  };\r\n\r\n  makeCheckBox = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <CheckBoxGroup\r\n          className=\"datatype-checkbox atom_fieldset mol_validation\"\r\n          id=\"1\"\r\n          handleChange={this.handleChange}\r\n          max={3}\r\n          checkboxes={this.state.checkboxes}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  makeErrorMessage = () => {\r\n    if (this.state.errorMessage) {\r\n      return (\r\n        <div className=\"datatypes-error-message\">\r\n          Du kan kun velge tre datakilder av gangen\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  };\r\n\r\n  makeColorCategories = () => {\r\n    return (\r\n      <div className=\"flex-children-color-category\">\r\n        <span className=\"color-category-parent\">\r\n          <span\r\n            className=\"circle color-category-child-dot\"\r\n            style={{ background: \"#E71D37\" }}\r\n          />\r\n          <span className=\"color-category-child-category\">Blodsukker</span>\r\n        </span>\r\n        <span className=\"color-category-parent\">\r\n          <span\r\n            className=\"circle color-category-child-dot\"\r\n            style={{ background: \"#85C99E\" }}\r\n          />\r\n          <span className=\"color-category-child-category\">Insulin</span>\r\n        </span>\r\n        <span className=\"color-category-parent\">\r\n          <span\r\n            className=\"circle color-category-child-dot\"\r\n            style={{ background: \"#59C3FF\" }}\r\n          />\r\n          <span className=\"color-category-child-category\">Skritt</span>\r\n        </span>\r\n        <span className=\"color-category-parent\">\r\n          <span\r\n            className=\"circle color-category-child-dot\"\r\n            style={{ background: \"#E38B21\" }}\r\n          />\r\n          <span className=\"color-category-child-category\">Vekt</span>\r\n        </span>\r\n        <span className=\"color-category-parent\">\r\n          <span\r\n            className=\"circle color-category-child-dot\"\r\n            style={{ background: \"#EF87CE\" }}\r\n          />\r\n          <span className=\"color-category-child-category\">\r\n            Fysisk aktivitet\r\n          </span>\r\n        </span>\r\n        <span className=\"color-category-parent\">\r\n          <span\r\n            className=\"circle color-category-child-dot\"\r\n            style={{ background: \"#EEE05D\" }}\r\n          />\r\n          <span className=\"color-category-child-category\">Karbohydrater</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  makeContent = () => {\r\n    return (\r\n      <div id=\"filterCard\">\r\n        <div className=\"flex-container-datatypes\">\r\n          {this.makeColorCategories()}\r\n          <div className=\"flex-children-datatypes-checkboxes\">\r\n            {this.makeCheckBox()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-container-datatypes-error-message\">\r\n          {this.makeErrorMessage()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <CardComponent title={\"\"} content={this.makeContent()} />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setBloodSugarChecked,\r\n  setInsulinChecked,\r\n  setStepsChecked,\r\n  setWeightChecked,\r\n  setPhysicalActivityChecked,\r\n  setCarbohydratesChecked,\r\n  setNumberChecked\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DataTypeCard);\r\n","import React, { Component } from \"react\";\r\nimport CardComponent from \"../../../Components/Card/cardComponent\";\r\nimport { DisplayButton } from \"@helsenorge/toolkit/components/atoms/buttons/display-button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./compareDataCards.css\";\r\n\r\nclass GoToInsightCard extends Component {\r\n  makeContent = () => {\r\n    return (\r\n      <div>\r\n        <div style={{ color: \"black\" }}>\r\n          Få mer dyptgående innsikt ved å se på hver og en av datatypene for seg\r\n          selv.\r\n        </div>\r\n        <br />\r\n        <div className=\"go-to-insight-card\">\r\n          <Link to={\"/dashboard\"} style={{ borderBottom: \"none\" }}>\r\n            <DisplayButton secondary>\r\n              <div className={\"button-sizing-go-to-insight-card\"}>Innsikt</div>\r\n            </DisplayButton>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CardComponent\r\n        title=\"Få innsikt om ulike datapunkter\"\r\n        content={this.makeContent()}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoToInsightCard;\r\n","import React, { Component } from \"react\";\r\nimport ViewCard from \"../Insight/InsightCards/viewCard\";\r\nimport MultipleGraphCard from \"./CompareDataCards/multipleGraphCard\";\r\nimport DataTypeCard from \"./CompareDataCards/dataTypeCard\";\r\nimport GoToInsightCard from \"./CompareDataCards/goToInsightCard\";\r\nimport DateSelectorCard from \"../../Components/DateSelectorCard/dateSelectorCard\";\r\nimport FHIRConnection from \"../../FHIRCommunication\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/*\r\n * Page that gives the user the possibility of selecting data sources, that are then\r\n * rendered above each other. Also contains the view card that lets the user select\r\n * time period to be shown either by dropdown or by selecting to and from dates.\r\n */\r\n\r\nclass CompareData extends Component {\r\n  render() {\r\n    if (this.props.baseInfo.isLoggedin) {\r\n      return (\r\n        <div style={{ margin: \"0 0 8px\" }}>\r\n          <h1 style={{ marginLeft: \"8px\" }}>Sammenlign data</h1>\r\n          <ViewCard />\r\n          <DateSelectorCard />\r\n          <MultipleGraphCard />\r\n          <DataTypeCard />\r\n          <GoToInsightCard />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <FHIRConnection />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient,\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CompareData);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PageNotFound from \"../../Images/medErrorImage.jpg\";\r\nimport \"./NotFoundPage.css\";\r\n\r\n/*\r\n * Simple 404 page.\r\n */\r\n\r\nclass NotFoundPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text\">\r\n        <h2>404 - Siden finnes ikke </h2>\r\n        <div className=\"head-error-image\">\r\n          <img src={PageNotFound} className=\"error-image\" alt=\"pageNotFound\" />\r\n        </div>\r\n        <p>\r\n          Oi! Siden du ser etter finnes ikke. <br />\r\n          <Link to=\"/\"> Gå til startsiden </Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NotFoundPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./menuBar.css\";\r\nimport Menu from \"@helsenorge/toolkit/components/icons/Menu\";\r\nimport Tiles from \"@helsenorge/toolkit/components/icons/Tiles\";\r\nimport ChevronDownRounded from \"@helsenorge/toolkit/components/icons/ChevronDownRounded\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { onLoggedIn } from \"../../Redux/actions\";\r\n\r\n/*\r\n * The menu bar at the top of the page.\r\n */\r\n\r\nclass MenuBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isToggleOn: false, isToggleOn2: false };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggle2 = this.toggle2.bind(this);\r\n    this.loggedOut = this.loggedOut.bind(this);\r\n    this.setWrapperRef = this.setWrapperRef.bind(this);\r\n    this.handleClickOutside = this.handleClickOutside.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      isToggleOn: !prevState.isToggleOn\r\n    }));\r\n  }\r\n\r\n  toggle2() {\r\n    this.setState(prevState => ({\r\n      isToggleOn2: !prevState.isToggleOn2\r\n    }));\r\n  }\r\n\r\n  loggedOut() {\r\n    sessionStorage.removeItem(\"googleResponse\");\r\n    this.props.onLoggedIn(false);\r\n  }\r\n\r\n  setWrapperRef(node) {\r\n    this.wrapperRef = node;\r\n  }\r\n\r\n  handleClickOutside(event) {\r\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n      if (this.state.isToggleOn) {\r\n        this.toggle();\r\n      }\r\n      if (this.state.isToggleOn2) {\r\n        this.toggle2();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  render() {\r\n    let menu;\r\n    let menu2;\r\n\r\n    // Tried to make a inner dropdown, does not work with flipped horizontal view,\r\n    // and does not close outer dropdown when clicked on inner buttons\r\n\r\n    if (this.state.isToggleOn2) {\r\n      menu2 = (\r\n        <div className=\"menuBar2 menuBar-open2\">\r\n          <ul className=\"ulBar\">\r\n            <li className=\"liBar2 libar2-items\">\r\n              <NavLink\r\n                to=\"/bloodsugar\"\r\n                className=\"menu-link2 click-menuBar-open2\"\r\n                onClick={() => {\r\n                  this.toggle2();\r\n                  this.toggle();\r\n                }}\r\n              >\r\n                Blodsukker\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar2 libar2-items\">\r\n              <NavLink\r\n                to=\"/insulin\"\r\n                className=\"menu-link2 click-menuBar-open2\"\r\n                onClick={() => {\r\n                  this.toggle2();\r\n                  this.toggle();\r\n                }}\r\n              >\r\n                Insulin\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar2 libar2-items\">\r\n              <NavLink\r\n                to=\"/steps\"\r\n                className=\"menu-link2 click-menuBar-open2\"\r\n                onClick={() => {\r\n                  this.toggle2();\r\n                  this.toggle();\r\n                }}\r\n              >\r\n                Skritt\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar2 libar2-items\">\r\n              <NavLink\r\n                to=\"/weight\"\r\n                className=\"menu-link2 click-menuBar-open2\"\r\n                onClick={() => {\r\n                  this.toggle2();\r\n                  this.toggle();\r\n                }}\r\n              >\r\n                Vekt\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar2 libar2-items\">\r\n              <NavLink\r\n                to=\"/physicalactivity\"\r\n                className=\"menu-link2 click-menuBar-open2\"\r\n                onClick={() => {\r\n                  this.toggle2();\r\n                  this.toggle();\r\n                }}\r\n              >\r\n                Fysisk aktivitet\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar2 libar2-items\">\r\n              <NavLink\r\n                to=\"/carbohydrates\"\r\n                className=\"menu-link2 click-menuBar-open2\"\r\n                onClick={() => {\r\n                  this.toggle2();\r\n                  this.toggle();\r\n                }}\r\n              >\r\n                Karbohydrater\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      menu2 = <div className=\"menuBar2\"> </div>;\r\n    }\r\n\r\n    if (this.state.isToggleOn) {\r\n      const menuBar2OpenStyle = {\r\n        height: \"auto\",\r\n        padding: \"12px 16px 4px 44px\"\r\n      };\r\n      menu = (\r\n        <div className=\"menuBar menuBar-open pageLink\">\r\n          <ul className=\"ulBar\">\r\n            <li className=\"liBar\">\r\n              <div className=\"minHelse\">\r\n                <Tiles color=\"black\" />{\" \"}\r\n                <span className=\"smallMarginLeft\">Min helse</span>\r\n              </div>\r\n            </li>\r\n            <li\r\n              className=\"liBar libar-items\"\r\n              style={this.state.isToggleOn2 ? menuBar2OpenStyle : {}}\r\n            >\r\n              <NavLink\r\n                to=\"/dashboard\"\r\n                className=\"menu-link click-menuBar-open\"\r\n                onClick={this.toggle}\r\n              >\r\n                Innsikt\r\n              </NavLink>\r\n              <button className=\"button2\" onClick={this.toggle2}>\r\n                <ChevronDownRounded\r\n                  className=\"menuButton2\"\r\n                  color=\"blue\"\r\n                  style={\r\n                    this.state.isToggleOn2\r\n                      ? { transform: \"rotate(180deg)\" }\r\n                      : {}\r\n                  }\r\n                />\r\n              </button>\r\n              {menu2}\r\n            </li>\r\n            <li className=\"liBar libar-items\">\r\n              <NavLink\r\n                to=\"/comparedata\"\r\n                className=\"menu-link click-menuBar-open\"\r\n                onClick={this.toggle}\r\n              >\r\n                Sammenlign data\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar libar-items\">\r\n              <NavLink\r\n                to=\"/mygoals\"\r\n                className=\"menu-link click-menuBar-open\"\r\n                onClick={this.toggle}\r\n              >\r\n                Sett mål\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"liBar libar-items\">\r\n              <span className=\"logoutButton\" onClick={() => this.loggedOut()}>\r\n                Logg ut\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      menu = <div className=\"menuBar\"> </div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div ref={this.setWrapperRef}>\r\n          <div className=\"bar navbar\">\r\n            <div className=\"menuPos textStyle\">\r\n              <Link className=\"aStyle\" to=\"/dashboard\">\r\n                Helseinnsikt\r\n              </Link>\r\n            </div>\r\n            <div className=\"menuPos\">\r\n              <button className=\"button\" onClick={this.toggle}>\r\n                <Menu /> Meny\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>{menu}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { onLoggedIn };\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    patient: state.patient\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MenuBar);","import { withRouter } from \"react-router\";\r\nimport { Component } from \"react\";\r\n\r\nclass StartFromTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\n  export default withRouter(StartFromTop)","import React, { Component } from \"react\";\r\nimport \"./master.css\";\r\nimport \"./min-helse.css\";\r\nimport \"./styles.css\";\r\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\r\nimport Dashboard from \"./Pages/Dashboard/dashboard\";\r\nimport BloodSugarInsight from \"./Pages/Insight/BloodSugarInsight/bloodSugarInsight\";\r\nimport StepInsight from \"./Pages/Insight/StepInsight/stepInsight\";\r\nimport InsulinInsight from \"./Pages/Insight/InsulinInsight/insulinInsight\";\r\nimport WeightInsight from \"./Pages/Insight/WeightInsight/weightInsight\";\r\nimport CarbohydrateInsight from \"./Pages/Insight/CarbohydrateInsight/carbohydrateInsight\";\r\nimport PhysicalActivityInsight from \"./Pages/Insight/PhysicalActivityInsight/physicalActivityInsight\";\r\nimport MyGoals from \"./Pages/MyGoalsPage/myGoalsPage\";\r\nimport CompareData from \"./Pages/CompareDataPage/compareDataPage\";\r\n\r\nimport FHIRCommunication from \"./FHIRCommunication\";\r\nimport NotFoundPage from \"./Pages/NotFoundPage/NotFoundPage\";\r\nimport MenuBar from \"./Components/MenuBar/menuBar\";\r\nimport StartFromTop from \"./StartFromTop\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <StartFromTop>\r\n          {this.props.baseInfo.isLoggedin && <MenuBar />}\r\n          <Switch>\r\n            <Route exact path=\"/\" component={FHIRCommunication} />\r\n            <Route path=\"/login\" component={FHIRCommunication} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/bloodsugar\" component={BloodSugarInsight} />\r\n            <Route path=\"/insulin\" component={InsulinInsight} />\r\n            <Route path=\"/steps\" component={StepInsight} />\r\n            <Route path=\"/weight\" component={WeightInsight} />\r\n            <Route path=\"/carbohydrates\" component={CarbohydrateInsight} />\r\n            <Route\r\n              path=\"/physicalactivity\"\r\n              component={PhysicalActivityInsight}\r\n            />\r\n            <Route path=\"/comparedata\" component={CompareData} />\r\n            <Route path=\"/mygoals\" component={MyGoals} />\r\n            <Route\r\n              render={() => {\r\n                return <NotFoundPage />;\r\n              }}\r\n            />\r\n          </Switch>\r\n        </StartFromTop>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    baseInfo: state.baseInfo\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { SET_PATIENT, SET_GOALS, CHANGE_GOAL } from \"./actionType\";\r\nimport defaultGoals from \"../defaultGoals.js\";\r\n\r\nexport const initialState = {\r\n  googleId: \"\",\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  fullname: \"\",\r\n  email: \"\",\r\n  datasets: [\r\n    { name: \"55423-8\", measurements: [] },\r\n    { name: \"29463-7\", measurements: [] },\r\n    { name: \"77595-7\", measurements: [] }\r\n  ],\r\n  goals: defaultGoals\r\n};\r\n\r\nexport default function patientReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_PATIENT: {\r\n      return {\r\n        ...state,\r\n        googleId: action.googleId,\r\n        firstname: action.firstname,\r\n        lastname: action.lastname,\r\n        fullname: action.firstname + \" \" + action.lastname,\r\n        email: action.email,\r\n        datasets: action.datasets\r\n      };\r\n    }\r\n\r\n    case SET_GOALS: {\r\n      return {\r\n        ...state,\r\n        goals: action.goals\r\n      };\r\n    }\r\n\r\n    case CHANGE_GOAL: {\r\n      let newGoals = { ...state.goals };\r\n      newGoals[action.goalName] = action.goal;\r\n      return {\r\n        ...state,\r\n        goals: newGoals\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","/*\r\n * Default goals used if the user has no goals in the fhir database.\r\n */\r\n\r\nconst defaultGoals = {\r\n  StepsGoal: {\r\n    type: \"lower\",\r\n    value: 10000,\r\n    unit: \"skritt\"\r\n  },\r\n  WeightGoal: {\r\n    type: \"upper\",\r\n    value: 70,\r\n    unit: \"kg\"\r\n  },\r\n  PhysicalActivityGoal: {\r\n    type: \"lower\",\r\n    value: 630,\r\n    unit: \"min\"\r\n  },\r\n  MeanGlucoseGoal: {\r\n    type: \"upper\",\r\n    value: 7,\r\n    unit: \"mmol/l\"\r\n  },\r\n  BloodSugarWithinRangePercentageGoal: {\r\n    type: \"upper\",\r\n    value: 80,\r\n    unit: \"%\"\r\n  },\r\n  CarbsGoal: {\r\n    type: \"upper\",\r\n    value: 280,\r\n    unit: \"g\"\r\n  },\r\n  BloodSugarRangeGoal: {\r\n    type: \"range\",\r\n    lower: 3,\r\n    upper: 12,\r\n    unit: \"mmol/l\"\r\n  }\r\n};\r\n\r\nexport default defaultGoals;\r\n","import {\r\n  IS_LOGGED_IN,\r\n  SET_VIEW,\r\n  SET_NR_OF_INTERVALS_BACK,\r\n  SET_BLOOD_SUGAR_CHECKED,\r\n  SET_INSULIN_CHECKED,\r\n  SET_STEPS_CHECKED,\r\n  SET_WEIGHT_CHECKED,\r\n  SET_PHYSICAL_ACTIVITY_CHECKED,\r\n  SET_CARBOHYDRATES_CHECKED,\r\n  SET_NUMBER_CHECKED,\r\n  SET_START_END\r\n} from \"./actionType\";\r\n\r\nconst initialState = {\r\n  isLoggedin: false,\r\n  view: \"week\",\r\n  nrOfIntervalsBack: \"0\",\r\n  bloodSugarChecked: false,\r\n  insulinChecked: false,\r\n  stepsChecked: false,\r\n  weightChecked: false,\r\n  physicalActivityChecked: false,\r\n  carbohydratesChecked: false,\r\n  numberChecked: 0,\r\n  start: \"\",\r\n  end: \"\"\r\n};\r\n\r\nexport default function baseInfoReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case IS_LOGGED_IN: {\r\n      return {\r\n        ...state,\r\n        isLoggedin: action.isLoggedin\r\n      };\r\n    }\r\n\r\n    case SET_VIEW: {\r\n      return {\r\n        ...state,\r\n        view: action.view,\r\n        nrOfIntervalsBack: \"0\"\r\n      };\r\n    }\r\n\r\n    case SET_NR_OF_INTERVALS_BACK: {\r\n      return {\r\n        ...state,\r\n        nrOfIntervalsBack: action.nrOfIntervalsBack\r\n      };\r\n    }\r\n\r\n    case SET_BLOOD_SUGAR_CHECKED: {\r\n      return { ...state, bloodSugarChecked: action.bloodSugarChecked };\r\n    }\r\n\r\n    case SET_INSULIN_CHECKED: {\r\n      return { ...state, insulinChecked: action.insulinChecked };\r\n    }\r\n\r\n    case SET_STEPS_CHECKED: {\r\n      return { ...state, stepsChecked: action.stepsChecked };\r\n    }\r\n\r\n    case SET_WEIGHT_CHECKED: {\r\n      return { ...state, weightChecked: action.weightChecked };\r\n    }\r\n\r\n    case SET_PHYSICAL_ACTIVITY_CHECKED: {\r\n      return {\r\n        ...state,\r\n        physicalActivityChecked: action.physicalActivityChecked\r\n      };\r\n    }\r\n\r\n    case SET_CARBOHYDRATES_CHECKED: {\r\n      return { ...state, carbohydratesChecked: action.carbohydratesChecked };\r\n    }\r\n\r\n    case SET_NUMBER_CHECKED: {\r\n      return { ...state, numberChecked: action.numberChecked };\r\n    }\r\n    case SET_START_END: {\r\n      return {\r\n        ...state,\r\n        start: action.start,\r\n        end: action.end\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","const persistDataLocally = store => next => action => {\r\n  next(action);\r\n  sessionStorage[\"reduxStore\"] = JSON.stringify(store.getState());\r\n  // console.log('Local Storage:', sessionStorage['reduxStore']);\r\n};\r\n\r\nexport default persistDataLocally;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport patientReducer from \"./patientReducer\";\r\nimport baseInfoReducer from \"./baseInfoReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport persistDataLocally from \"./persistData\";\r\n// import {initialState} from \"./patientReducer\"\r\n\r\nconst reducer = combineReducers({\r\n  patient: patientReducer,\r\n  baseInfo: baseInfoReducer\r\n});\r\n\r\n// Started on persisting the state, but not nessecary yet, might use later\r\n\r\n/* let retrievedState;\r\ntry {\r\n  retrievedState = sessionStorage.getItem(\"reduxStore\");\r\n  if (retrievedState === null) {\r\n    retrievedState = {patient: initialState};\r\n  }\r\n  retrievedState = JSON.parse(retrievedState);\r\n} catch (err) {\r\n  retrievedState = {};\r\n} */\r\n\r\nconst middlewares = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  //retrievedState,\r\n  composeEnhancers(applyMiddleware(...middlewares, persistDataLocally))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./Redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}